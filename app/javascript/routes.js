/*
File generated by js-routes 1.4.14
Based on Rails 6.0.3 routes of Scinote::Application
 */

(function() {
  var DeprecatedGlobbingBehavior, NodeTypes, ParameterMissing, ReservedOptions, SpecialOptionsKey, UriEncoderSegmentRegex, Utils, error, result,
    hasProp = {}.hasOwnProperty,
    slice = [].slice;

  ParameterMissing = function(message, fileName, lineNumber) {
    var instance;
    instance = new Error(message, fileName, lineNumber);
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(instance, Object.getPrototypeOf(this));
    } else {
      instance.__proto__ = this.__proto__;
    }
    if (Error.captureStackTrace) {
      Error.captureStackTrace(instance, ParameterMissing);
    }
    return instance;
  };

  ParameterMissing.prototype = Object.create(Error.prototype, {
    constructor: {
      value: Error,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });

  if (Object.setPrototypeOf) {
    Object.setPrototypeOf(ParameterMissing, Error);
  } else {
    ParameterMissing.__proto__ = Error;
  }

  NodeTypes = {"GROUP":1,"CAT":2,"SYMBOL":3,"OR":4,"STAR":5,"LITERAL":6,"SLASH":7,"DOT":8};

  DeprecatedGlobbingBehavior = false;

  SpecialOptionsKey = "_options";

  UriEncoderSegmentRegex = /[^a-zA-Z0-9\-\._~!\$&'\(\)\*\+,;=:@]/g;

  ReservedOptions = ['anchor', 'trailing_slash', 'subdomain', 'host', 'port', 'protocol'];

  Utils = {
    configuration: {
      prefix: "",
      default_url_options: {},
      special_options_key: "_options",
      serializer: null
    },
    default_serializer: function(object, prefix) {
      var element, i, j, key, len, prop, s;
      if (prefix == null) {
        prefix = null;
      }
      if (object == null) {
        return "";
      }
      if (!prefix && !(this.get_object_type(object) === "object")) {
        throw new Error("Url parameters should be a javascript hash");
      }
      s = [];
      switch (this.get_object_type(object)) {
        case "array":
          for (i = j = 0, len = object.length; j < len; i = ++j) {
            element = object[i];
            s.push(this.default_serializer(element, prefix + "[]"));
          }
          break;
        case "object":
          for (key in object) {
            if (!hasProp.call(object, key)) continue;
            prop = object[key];
            if ((prop == null) && (prefix != null)) {
              prop = "";
            }
            if (prop != null) {
              if (prefix != null) {
                key = prefix + "[" + key + "]";
              }
              s.push(this.default_serializer(prop, key));
            }
          }
          break;
        default:
          if (object != null) {
            s.push((encodeURIComponent(prefix.toString())) + "=" + (encodeURIComponent(object.toString())));
          }
      }
      if (!s.length) {
        return "";
      }
      return s.join("&");
    },
    serialize: function(object) {
      var custom_serializer;
      custom_serializer = this.configuration.serializer;
      if ((custom_serializer != null) && this.get_object_type(custom_serializer) === "function") {
        return custom_serializer(object);
      } else {
        return this.default_serializer(object);
      }
    },
    clean_path: function(path) {
      var last_index;
      path = path.split("://");
      last_index = path.length - 1;
      path[last_index] = path[last_index].replace(/\/+/g, "/");
      return path.join("://");
    },
    extract_options: function(number_of_params, args) {
      var last_el, options;
      last_el = args[args.length - 1];
      if ((args.length > number_of_params && last_el === void 0) || ((last_el != null) && "object" === this.get_object_type(last_el) && !this.looks_like_serialized_model(last_el))) {
        options = args.pop() || {};
        delete options[this.configuration.special_options_key];
        return options;
      } else {
        return {};
      }
    },
    looks_like_serialized_model: function(object) {
      return !object[this.configuration.special_options_key] && ("id" in object || "to_param" in object);
    },
    path_identifier: function(object) {
      var property;
      if (object === 0) {
        return "0";
      }
      if (!object) {
        return "";
      }
      property = object;
      if (this.get_object_type(object) === "object") {
        if ("to_param" in object) {
          if (object.to_param == null) {
            throw new ParameterMissing("Route parameter missing: to_param");
          }
          property = object.to_param;
        } else if ("id" in object) {
          if (object.id == null) {
            throw new ParameterMissing("Route parameter missing: id");
          }
          property = object.id;
        } else {
          property = object;
        }
        if (this.get_object_type(property) === "function") {
          property = property.call(object);
        }
      }
      return property.toString();
    },
    clone: function(obj) {
      var attr, copy, key;
      if ((obj == null) || "object" !== this.get_object_type(obj)) {
        return obj;
      }
      copy = obj.constructor();
      for (key in obj) {
        if (!hasProp.call(obj, key)) continue;
        attr = obj[key];
        copy[key] = attr;
      }
      return copy;
    },
    merge: function() {
      var tap, xs;
      xs = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      tap = function(o, fn) {
        fn(o);
        return o;
      };
      if ((xs != null ? xs.length : void 0) > 0) {
        return tap({}, function(m) {
          var j, k, len, results, v, x;
          results = [];
          for (j = 0, len = xs.length; j < len; j++) {
            x = xs[j];
            results.push((function() {
              var results1;
              results1 = [];
              for (k in x) {
                v = x[k];
                results1.push(m[k] = v);
              }
              return results1;
            })());
          }
          return results;
        });
      }
    },
    normalize_options: function(parts, required_parts, default_options, actual_parameters) {
      var i, j, key, len, options, part, parts_options, result, route_parts, url_parameters, use_all_parts, value;
      options = this.extract_options(parts.length, actual_parameters);
      if (actual_parameters.length > parts.length) {
        throw new Error("Too many parameters provided for path");
      }
      use_all_parts = actual_parameters.length > required_parts.length;
      parts_options = {};
      for (key in options) {
        if (!hasProp.call(options, key)) continue;
        use_all_parts = true;
        if (this.indexOf(parts, key) >= 0) {
          parts_options[key] = value;
        }
      }
      options = this.merge(this.configuration.default_url_options, default_options, options);
      result = {};
      url_parameters = {};
      result['url_parameters'] = url_parameters;
      for (key in options) {
        if (!hasProp.call(options, key)) continue;
        value = options[key];
        if (this.indexOf(ReservedOptions, key) >= 0) {
          result[key] = value;
        } else {
          url_parameters[key] = value;
        }
      }
      route_parts = use_all_parts ? parts : required_parts;
      i = 0;
      for (j = 0, len = route_parts.length; j < len; j++) {
        part = route_parts[j];
        if (i < actual_parameters.length) {
          if (!parts_options.hasOwnProperty(part)) {
            url_parameters[part] = actual_parameters[i];
            ++i;
          }
        }
      }
      return result;
    },
    build_route: function(parts, required_parts, default_options, route, full_url, args) {
      var options, parameters, result, url, url_params;
      args = Array.prototype.slice.call(args);
      options = this.normalize_options(parts, required_parts, default_options, args);
      parameters = options['url_parameters'];
      result = "" + (this.get_prefix()) + (this.visit(route, parameters));
      url = Utils.clean_path(result);
      if (options['trailing_slash'] === true) {
        url = url.replace(/(.*?)[\/]?$/, "$1/");
      }
      if ((url_params = this.serialize(parameters)).length) {
        url += "?" + url_params;
      }
      url += options.anchor ? "#" + options.anchor : "";
      if (full_url) {
        url = this.route_url(options) + url;
      }
      return url;
    },
    visit: function(route, parameters, optional) {
      var left, left_part, right, right_part, type, value;
      if (optional == null) {
        optional = false;
      }
      type = route[0], left = route[1], right = route[2];
      switch (type) {
        case NodeTypes.GROUP:
          return this.visit(left, parameters, true);
        case NodeTypes.STAR:
          return this.visit_globbing(left, parameters, true);
        case NodeTypes.LITERAL:
        case NodeTypes.SLASH:
        case NodeTypes.DOT:
          return left;
        case NodeTypes.CAT:
          left_part = this.visit(left, parameters, optional);
          right_part = this.visit(right, parameters, optional);
          if (optional && ((this.is_optional_node(left[0]) && !left_part) || ((this.is_optional_node(right[0])) && !right_part))) {
            return "";
          }
          return "" + left_part + right_part;
        case NodeTypes.SYMBOL:
          value = parameters[left];
          delete parameters[left];
          if (value != null) {
            return this.encode_segment(this.path_identifier(value));
          }
          if (optional) {
            return "";
          } else {
            throw new ParameterMissing("Route parameter missing: " + left);
          }
          break;
        default:
          throw new Error("Unknown Rails node type");
      }
    },
    encode_segment: function(segment) {
      return segment.replace(UriEncoderSegmentRegex, function(str) {
        return encodeURIComponent(str);
      });
    },
    is_optional_node: function(node) {
      return this.indexOf([NodeTypes.STAR, NodeTypes.SYMBOL, NodeTypes.CAT], node) >= 0;
    },
    build_path_spec: function(route, wildcard) {
      var left, right, type;
      if (wildcard == null) {
        wildcard = false;
      }
      type = route[0], left = route[1], right = route[2];
      switch (type) {
        case NodeTypes.GROUP:
          return "(" + (this.build_path_spec(left)) + ")";
        case NodeTypes.CAT:
          return "" + (this.build_path_spec(left)) + (this.build_path_spec(right));
        case NodeTypes.STAR:
          return this.build_path_spec(left, true);
        case NodeTypes.SYMBOL:
          if (wildcard === true) {
            return "" + (left[0] === '*' ? '' : '*') + left;
          } else {
            return ":" + left;
          }
          break;
        case NodeTypes.SLASH:
        case NodeTypes.DOT:
        case NodeTypes.LITERAL:
          return left;
        default:
          throw new Error("Unknown Rails node type");
      }
    },
    visit_globbing: function(route, parameters, optional) {
      var left, right, type, value;
      type = route[0], left = route[1], right = route[2];
      value = parameters[left];
      delete parameters[left];
      if (value == null) {
        return this.visit(route, parameters, optional);
      }
      value = (function() {
        switch (this.get_object_type(value)) {
          case "array":
            return value.join("/");
          default:
            return value;
        }
      }).call(this);
      if (DeprecatedGlobbingBehavior) {
        return this.path_identifier(value);
      } else {
        return encodeURI(this.path_identifier(value));
      }
    },
    get_prefix: function() {
      var prefix;
      prefix = this.configuration.prefix;
      if (prefix !== "") {
        prefix = (prefix.match("/$") ? prefix : prefix + "/");
      }
      return prefix;
    },
    route: function(parts_table, default_options, route_spec, full_url) {
      var j, len, part, parts, path_fn, ref, required, required_parts;
      required_parts = [];
      parts = [];
      for (j = 0, len = parts_table.length; j < len; j++) {
        ref = parts_table[j], part = ref[0], required = ref[1];
        parts.push(part);
        if (required) {
          required_parts.push(part);
        }
      }
      path_fn = function() {
        return Utils.build_route(parts, required_parts, default_options, route_spec, full_url, arguments);
      };
      path_fn.required_params = required_parts;
      path_fn.toString = function() {
        return Utils.build_path_spec(route_spec);
      };
      return path_fn;
    },
    route_url: function(route_defaults) {
      var hostname, port, protocol, subdomain;
      if (typeof route_defaults === 'string') {
        return route_defaults;
      }
      hostname = route_defaults.host || Utils.current_host();
      if (!hostname) {
        return '';
      }
      subdomain = route_defaults.subdomain ? route_defaults.subdomain + '.' : '';
      protocol = route_defaults.protocol || Utils.current_protocol();
      port = route_defaults.port || (!route_defaults.host ? Utils.current_port() : void 0);
      port = port ? ":" + port : '';
      return protocol + "://" + subdomain + hostname + port;
    },
    has_location: function() {
      return (typeof window !== "undefined" && window !== null ? window.location : void 0) != null;
    },
    current_host: function() {
      if (this.has_location()) {
        return window.location.hostname;
      } else {
        return null;
      }
    },
    current_protocol: function() {
      if (this.has_location() && window.location.protocol !== '') {
        return window.location.protocol.replace(/:$/, '');
      } else {
        return 'http';
      }
    },
    current_port: function() {
      if (this.has_location() && window.location.port !== '') {
        return window.location.port;
      } else {
        return '';
      }
    },
    _classToTypeCache: null,
    _classToType: function() {
      var j, len, name, ref;
      if (this._classToTypeCache != null) {
        return this._classToTypeCache;
      }
      this._classToTypeCache = {};
      ref = "Boolean Number String Function Array Date RegExp Object Error".split(" ");
      for (j = 0, len = ref.length; j < len; j++) {
        name = ref[j];
        this._classToTypeCache["[object " + name + "]"] = name.toLowerCase();
      }
      return this._classToTypeCache;
    },
    get_object_type: function(obj) {
      if (this.jQuery && (this.jQuery.type != null)) {
        return this.jQuery.type(obj);
      }
      if (obj == null) {
        return "" + obj;
      }
      if (typeof obj === "object" || typeof obj === "function") {
        return this._classToType()[Object.prototype.toString.call(obj)] || "object";
      } else {
        return typeof obj;
      }
    },
    indexOf: function(array, element) {
      if (Array.prototype.indexOf) {
        return array.indexOf(element);
      } else {
        return this.indexOfImplementation(array, element);
      }
    },
    indexOfImplementation: function(array, element) {
      var el, i, j, len, result;
      result = -1;
      for (i = j = 0, len = array.length; j < len; i = ++j) {
        el = array[i];
        if (el === element) {
          result = i;
        }
      }
      return result;
    },
    namespace: function(root, namespace, routes) {
      var index, j, len, part, parts;
      parts = namespace ? namespace.split(".") : [];
      if (parts.length === 0) {
        return routes;
      }
      for (index = j = 0, len = parts.length; j < len; index = ++j) {
        part = parts[index];
        if (index < parts.length - 1) {
          root = (root[part] || (root[part] = {}));
        } else {
          return root[part] = routes;
        }
      }
    },
    configure: function(new_config) {
      return this.configuration = this.merge(this.configuration, new_config);
    },
    config: function() {
      return this.clone(this.configuration);
    },
    make: function() {
      var routes;
      routes = {
// accept_user_invitation => /users/invitation/accept(.:format)
  // function(options)
  accept_user_invitation_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"invitation",false],[2,[7,"/",false],[2,[6,"accept",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// activities => /activities(.:format)
  // function(options)
  activities_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"activities",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// activities_my_module => /modules/:id/activities(.:format)
  // function(id, options)
  activities_my_module_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"modules",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"activities",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// activities_tab_my_module => /modules/:id/activities_tab(.:format)
  // function(id, options)
  activities_tab_my_module_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"modules",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"activities_tab",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// addons => /users/settings/account/addons(.:format)
  // function(options)
  addons_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"settings",false],[2,[7,"/",false],[2,[6,"account",false],[2,[7,"/",false],[2,[6,"addons",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// api_health => /api/health(.:format)
  // function(options)
  api_health_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"health",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// api_status => /api/status(.:format)
  // function(options)
  api_status_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"status",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// api_v1_team => /api/v1/teams/:id(.:format)
  // function(id, options)
  api_v1_team_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// api_v1_team_inventories => /api/v1/teams/:team_id/inventories(.:format)
  // function(team_id, options)
  api_v1_team_inventories_path: Utils.route([["team_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"inventories",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// api_v1_team_inventory => /api/v1/teams/:team_id/inventories/:id(.:format)
  // function(team_id, id, options)
  api_v1_team_inventory_path: Utils.route([["team_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"inventories",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]),
// api_v1_team_inventory_column => /api/v1/teams/:team_id/inventories/:inventory_id/columns/:id(.:format)
  // function(team_id, inventory_id, id, options)
  api_v1_team_inventory_column_path: Utils.route([["team_id",true],["inventory_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"inventories",false],[2,[7,"/",false],[2,[3,"inventory_id",false],[2,[7,"/",false],[2,[6,"columns",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]]]),
// api_v1_team_inventory_column_checklist_item => /api/v1/teams/:team_id/inventories/:inventory_id/columns/:column_id/checklist_items/:id(.:format)
  // function(team_id, inventory_id, column_id, id, options)
  api_v1_team_inventory_column_checklist_item_path: Utils.route([["team_id",true],["inventory_id",true],["column_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"inventories",false],[2,[7,"/",false],[2,[3,"inventory_id",false],[2,[7,"/",false],[2,[6,"columns",false],[2,[7,"/",false],[2,[3,"column_id",false],[2,[7,"/",false],[2,[6,"checklist_items",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]]]]]]]),
// api_v1_team_inventory_column_checklist_items => /api/v1/teams/:team_id/inventories/:inventory_id/columns/:column_id/checklist_items(.:format)
  // function(team_id, inventory_id, column_id, options)
  api_v1_team_inventory_column_checklist_items_path: Utils.route([["team_id",true],["inventory_id",true],["column_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"inventories",false],[2,[7,"/",false],[2,[3,"inventory_id",false],[2,[7,"/",false],[2,[6,"columns",false],[2,[7,"/",false],[2,[3,"column_id",false],[2,[7,"/",false],[2,[6,"checklist_items",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]]]]]),
// api_v1_team_inventory_column_list_item => /api/v1/teams/:team_id/inventories/:inventory_id/columns/:column_id/list_items/:id(.:format)
  // function(team_id, inventory_id, column_id, id, options)
  api_v1_team_inventory_column_list_item_path: Utils.route([["team_id",true],["inventory_id",true],["column_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"inventories",false],[2,[7,"/",false],[2,[3,"inventory_id",false],[2,[7,"/",false],[2,[6,"columns",false],[2,[7,"/",false],[2,[3,"column_id",false],[2,[7,"/",false],[2,[6,"list_items",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]]]]]]]),
// api_v1_team_inventory_column_list_items => /api/v1/teams/:team_id/inventories/:inventory_id/columns/:column_id/list_items(.:format)
  // function(team_id, inventory_id, column_id, options)
  api_v1_team_inventory_column_list_items_path: Utils.route([["team_id",true],["inventory_id",true],["column_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"inventories",false],[2,[7,"/",false],[2,[3,"inventory_id",false],[2,[7,"/",false],[2,[6,"columns",false],[2,[7,"/",false],[2,[3,"column_id",false],[2,[7,"/",false],[2,[6,"list_items",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]]]]]),
// api_v1_team_inventory_column_status_item => /api/v1/teams/:team_id/inventories/:inventory_id/columns/:column_id/status_items/:id(.:format)
  // function(team_id, inventory_id, column_id, id, options)
  api_v1_team_inventory_column_status_item_path: Utils.route([["team_id",true],["inventory_id",true],["column_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"inventories",false],[2,[7,"/",false],[2,[3,"inventory_id",false],[2,[7,"/",false],[2,[6,"columns",false],[2,[7,"/",false],[2,[3,"column_id",false],[2,[7,"/",false],[2,[6,"status_items",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]]]]]]]),
// api_v1_team_inventory_column_status_items => /api/v1/teams/:team_id/inventories/:inventory_id/columns/:column_id/status_items(.:format)
  // function(team_id, inventory_id, column_id, options)
  api_v1_team_inventory_column_status_items_path: Utils.route([["team_id",true],["inventory_id",true],["column_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"inventories",false],[2,[7,"/",false],[2,[3,"inventory_id",false],[2,[7,"/",false],[2,[6,"columns",false],[2,[7,"/",false],[2,[3,"column_id",false],[2,[7,"/",false],[2,[6,"status_items",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]]]]]),
// api_v1_team_inventory_columns => /api/v1/teams/:team_id/inventories/:inventory_id/columns(.:format)
  // function(team_id, inventory_id, options)
  api_v1_team_inventory_columns_path: Utils.route([["team_id",true],["inventory_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"inventories",false],[2,[7,"/",false],[2,[3,"inventory_id",false],[2,[7,"/",false],[2,[6,"columns",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]),
// api_v1_team_inventory_item => /api/v1/teams/:team_id/inventories/:inventory_id/items/:id(.:format)
  // function(team_id, inventory_id, id, options)
  api_v1_team_inventory_item_path: Utils.route([["team_id",true],["inventory_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"inventories",false],[2,[7,"/",false],[2,[3,"inventory_id",false],[2,[7,"/",false],[2,[6,"items",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]]]),
// api_v1_team_inventory_item_cell => /api/v1/teams/:team_id/inventories/:inventory_id/items/:item_id/cells/:id(.:format)
  // function(team_id, inventory_id, item_id, id, options)
  api_v1_team_inventory_item_cell_path: Utils.route([["team_id",true],["inventory_id",true],["item_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"inventories",false],[2,[7,"/",false],[2,[3,"inventory_id",false],[2,[7,"/",false],[2,[6,"items",false],[2,[7,"/",false],[2,[3,"item_id",false],[2,[7,"/",false],[2,[6,"cells",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]]]]]]]),
// api_v1_team_inventory_item_cells => /api/v1/teams/:team_id/inventories/:inventory_id/items/:item_id/cells(.:format)
  // function(team_id, inventory_id, item_id, options)
  api_v1_team_inventory_item_cells_path: Utils.route([["team_id",true],["inventory_id",true],["item_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"inventories",false],[2,[7,"/",false],[2,[3,"inventory_id",false],[2,[7,"/",false],[2,[6,"items",false],[2,[7,"/",false],[2,[3,"item_id",false],[2,[7,"/",false],[2,[6,"cells",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]]]]]),
// api_v1_team_inventory_items => /api/v1/teams/:team_id/inventories/:inventory_id/items(.:format)
  // function(team_id, inventory_id, options)
  api_v1_team_inventory_items_path: Utils.route([["team_id",true],["inventory_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"inventories",false],[2,[7,"/",false],[2,[3,"inventory_id",false],[2,[7,"/",false],[2,[6,"items",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]),
// api_v1_team_project => /api/v1/teams/:team_id/projects/:id(.:format)
  // function(team_id, id, options)
  api_v1_team_project_path: Utils.route([["team_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]),
// api_v1_team_project_activities => /api/v1/teams/:team_id/projects/:project_id/activities(.:format)
  // function(team_id, project_id, options)
  api_v1_team_project_activities_path: Utils.route([["team_id",true],["project_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"activities",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]),
// api_v1_team_project_comment => /api/v1/teams/:team_id/projects/:project_id/comments/:id(.:format)
  // function(team_id, project_id, id, options)
  api_v1_team_project_comment_path: Utils.route([["team_id",true],["project_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"comments",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]]]),
// api_v1_team_project_comments => /api/v1/teams/:team_id/projects/:project_id/comments(.:format)
  // function(team_id, project_id, options)
  api_v1_team_project_comments_path: Utils.route([["team_id",true],["project_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"comments",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]),
// api_v1_team_project_experiment => /api/v1/teams/:team_id/projects/:project_id/experiments/:id(.:format)
  // function(team_id, project_id, id, options)
  api_v1_team_project_experiment_path: Utils.route([["team_id",true],["project_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"experiments",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]]]),
// api_v1_team_project_experiment_connection => /api/v1/teams/:team_id/projects/:project_id/experiments/:experiment_id/connections/:id(.:format)
  // function(team_id, project_id, experiment_id, id, options)
  api_v1_team_project_experiment_connection_path: Utils.route([["team_id",true],["project_id",true],["experiment_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"experiments",false],[2,[7,"/",false],[2,[3,"experiment_id",false],[2,[7,"/",false],[2,[6,"connections",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]]]]]]]),
// api_v1_team_project_experiment_connections => /api/v1/teams/:team_id/projects/:project_id/experiments/:experiment_id/connections(.:format)
  // function(team_id, project_id, experiment_id, options)
  api_v1_team_project_experiment_connections_path: Utils.route([["team_id",true],["project_id",true],["experiment_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"experiments",false],[2,[7,"/",false],[2,[3,"experiment_id",false],[2,[7,"/",false],[2,[6,"connections",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]]]]]),
// api_v1_team_project_experiment_task => /api/v1/teams/:team_id/projects/:project_id/experiments/:experiment_id/tasks/:id(.:format)
  // function(team_id, project_id, experiment_id, id, options)
  api_v1_team_project_experiment_task_path: Utils.route([["team_id",true],["project_id",true],["experiment_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"experiments",false],[2,[7,"/",false],[2,[3,"experiment_id",false],[2,[7,"/",false],[2,[6,"tasks",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]]]]]]]),
// api_v1_team_project_experiment_task_activities => /api/v1/teams/:team_id/projects/:project_id/experiments/:experiment_id/tasks/:task_id/activities(.:format)
  // function(team_id, project_id, experiment_id, task_id, options)
  api_v1_team_project_experiment_task_activities_path: Utils.route([["team_id",true],["project_id",true],["experiment_id",true],["task_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"experiments",false],[2,[7,"/",false],[2,[3,"experiment_id",false],[2,[7,"/",false],[2,[6,"tasks",false],[2,[7,"/",false],[2,[3,"task_id",false],[2,[7,"/",false],[2,[6,"activities",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]]]]]]]]]),
// api_v1_team_project_experiment_task_group => /api/v1/teams/:team_id/projects/:project_id/experiments/:experiment_id/task_groups/:id(.:format)
  // function(team_id, project_id, experiment_id, id, options)
  api_v1_team_project_experiment_task_group_path: Utils.route([["team_id",true],["project_id",true],["experiment_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"experiments",false],[2,[7,"/",false],[2,[3,"experiment_id",false],[2,[7,"/",false],[2,[6,"task_groups",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]]]]]]]),
// api_v1_team_project_experiment_task_groups => /api/v1/teams/:team_id/projects/:project_id/experiments/:experiment_id/task_groups(.:format)
  // function(team_id, project_id, experiment_id, options)
  api_v1_team_project_experiment_task_groups_path: Utils.route([["team_id",true],["project_id",true],["experiment_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"experiments",false],[2,[7,"/",false],[2,[3,"experiment_id",false],[2,[7,"/",false],[2,[6,"task_groups",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]]]]]),
// api_v1_team_project_experiment_task_item => /api/v1/teams/:team_id/projects/:project_id/experiments/:experiment_id/tasks/:task_id/items/:id(.:format)
  // function(team_id, project_id, experiment_id, task_id, id, options)
  api_v1_team_project_experiment_task_item_path: Utils.route([["team_id",true],["project_id",true],["experiment_id",true],["task_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"experiments",false],[2,[7,"/",false],[2,[3,"experiment_id",false],[2,[7,"/",false],[2,[6,"tasks",false],[2,[7,"/",false],[2,[3,"task_id",false],[2,[7,"/",false],[2,[6,"items",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]]]]]]]]]]]),
// api_v1_team_project_experiment_task_items => /api/v1/teams/:team_id/projects/:project_id/experiments/:experiment_id/tasks/:task_id/items(.:format)
  // function(team_id, project_id, experiment_id, task_id, options)
  api_v1_team_project_experiment_task_items_path: Utils.route([["team_id",true],["project_id",true],["experiment_id",true],["task_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"experiments",false],[2,[7,"/",false],[2,[3,"experiment_id",false],[2,[7,"/",false],[2,[6,"tasks",false],[2,[7,"/",false],[2,[3,"task_id",false],[2,[7,"/",false],[2,[6,"items",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]]]]]]]]]),
// api_v1_team_project_experiment_task_protocol => /api/v1/teams/:team_id/projects/:project_id/experiments/:experiment_id/tasks/:task_id/protocols/:id(.:format)
  // function(team_id, project_id, experiment_id, task_id, id, options)
  api_v1_team_project_experiment_task_protocol_path: Utils.route([["team_id",true],["project_id",true],["experiment_id",true],["task_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"experiments",false],[2,[7,"/",false],[2,[3,"experiment_id",false],[2,[7,"/",false],[2,[6,"tasks",false],[2,[7,"/",false],[2,[3,"task_id",false],[2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]]]]]]]]]]]),
// api_v1_team_project_experiment_task_protocol_step => /api/v1/teams/:team_id/projects/:project_id/experiments/:experiment_id/tasks/:task_id/protocols/:protocol_id/steps/:id(.:format)
  // function(team_id, project_id, experiment_id, task_id, protocol_id, id, options)
  api_v1_team_project_experiment_task_protocol_step_path: Utils.route([["team_id",true],["project_id",true],["experiment_id",true],["task_id",true],["protocol_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"experiments",false],[2,[7,"/",false],[2,[3,"experiment_id",false],[2,[7,"/",false],[2,[6,"tasks",false],[2,[7,"/",false],[2,[3,"task_id",false],[2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[3,"protocol_id",false],[2,[7,"/",false],[2,[6,"steps",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]]]]]]]]]]]]]]]),
// api_v1_team_project_experiment_task_protocol_step_asset => /api/v1/teams/:team_id/projects/:project_id/experiments/:experiment_id/tasks/:task_id/protocols/:protocol_id/steps/:step_id/attachments/:id(.:format)
  // function(team_id, project_id, experiment_id, task_id, protocol_id, step_id, id, options)
  api_v1_team_project_experiment_task_protocol_step_asset_path: Utils.route([["team_id",true],["project_id",true],["experiment_id",true],["task_id",true],["protocol_id",true],["step_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"experiments",false],[2,[7,"/",false],[2,[3,"experiment_id",false],[2,[7,"/",false],[2,[6,"tasks",false],[2,[7,"/",false],[2,[3,"task_id",false],[2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[3,"protocol_id",false],[2,[7,"/",false],[2,[6,"steps",false],[2,[7,"/",false],[2,[3,"step_id",false],[2,[7,"/",false],[2,[6,"attachments",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]),
// api_v1_team_project_experiment_task_protocol_step_assets => /api/v1/teams/:team_id/projects/:project_id/experiments/:experiment_id/tasks/:task_id/protocols/:protocol_id/steps/:step_id/attachments(.:format)
  // function(team_id, project_id, experiment_id, task_id, protocol_id, step_id, options)
  api_v1_team_project_experiment_task_protocol_step_assets_path: Utils.route([["team_id",true],["project_id",true],["experiment_id",true],["task_id",true],["protocol_id",true],["step_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"experiments",false],[2,[7,"/",false],[2,[3,"experiment_id",false],[2,[7,"/",false],[2,[6,"tasks",false],[2,[7,"/",false],[2,[3,"task_id",false],[2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[3,"protocol_id",false],[2,[7,"/",false],[2,[6,"steps",false],[2,[7,"/",false],[2,[3,"step_id",false],[2,[7,"/",false],[2,[6,"attachments",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]),
// api_v1_team_project_experiment_task_protocol_step_checklist => /api/v1/teams/:team_id/projects/:project_id/experiments/:experiment_id/tasks/:task_id/protocols/:protocol_id/steps/:step_id/checklists/:id(.:format)
  // function(team_id, project_id, experiment_id, task_id, protocol_id, step_id, id, options)
  api_v1_team_project_experiment_task_protocol_step_checklist_path: Utils.route([["team_id",true],["project_id",true],["experiment_id",true],["task_id",true],["protocol_id",true],["step_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"experiments",false],[2,[7,"/",false],[2,[3,"experiment_id",false],[2,[7,"/",false],[2,[6,"tasks",false],[2,[7,"/",false],[2,[3,"task_id",false],[2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[3,"protocol_id",false],[2,[7,"/",false],[2,[6,"steps",false],[2,[7,"/",false],[2,[3,"step_id",false],[2,[7,"/",false],[2,[6,"checklists",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]),
// api_v1_team_project_experiment_task_protocol_step_checklist_item => /api/v1/teams/:team_id/projects/:project_id/experiments/:experiment_id/tasks/:task_id/protocols/:protocol_id/steps/:step_id/checklists/:checklist_id/items/:id(.:format)
  // function(team_id, project_id, experiment_id, task_id, protocol_id, step_id, checklist_id, id, options)
  api_v1_team_project_experiment_task_protocol_step_checklist_item_path: Utils.route([["team_id",true],["project_id",true],["experiment_id",true],["task_id",true],["protocol_id",true],["step_id",true],["checklist_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"experiments",false],[2,[7,"/",false],[2,[3,"experiment_id",false],[2,[7,"/",false],[2,[6,"tasks",false],[2,[7,"/",false],[2,[3,"task_id",false],[2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[3,"protocol_id",false],[2,[7,"/",false],[2,[6,"steps",false],[2,[7,"/",false],[2,[3,"step_id",false],[2,[7,"/",false],[2,[6,"checklists",false],[2,[7,"/",false],[2,[3,"checklist_id",false],[2,[7,"/",false],[2,[6,"items",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]),
// api_v1_team_project_experiment_task_protocol_step_checklist_items => /api/v1/teams/:team_id/projects/:project_id/experiments/:experiment_id/tasks/:task_id/protocols/:protocol_id/steps/:step_id/checklists/:checklist_id/items(.:format)
  // function(team_id, project_id, experiment_id, task_id, protocol_id, step_id, checklist_id, options)
  api_v1_team_project_experiment_task_protocol_step_checklist_items_path: Utils.route([["team_id",true],["project_id",true],["experiment_id",true],["task_id",true],["protocol_id",true],["step_id",true],["checklist_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"experiments",false],[2,[7,"/",false],[2,[3,"experiment_id",false],[2,[7,"/",false],[2,[6,"tasks",false],[2,[7,"/",false],[2,[3,"task_id",false],[2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[3,"protocol_id",false],[2,[7,"/",false],[2,[6,"steps",false],[2,[7,"/",false],[2,[3,"step_id",false],[2,[7,"/",false],[2,[6,"checklists",false],[2,[7,"/",false],[2,[3,"checklist_id",false],[2,[7,"/",false],[2,[6,"items",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]),
// api_v1_team_project_experiment_task_protocol_step_checklists => /api/v1/teams/:team_id/projects/:project_id/experiments/:experiment_id/tasks/:task_id/protocols/:protocol_id/steps/:step_id/checklists(.:format)
  // function(team_id, project_id, experiment_id, task_id, protocol_id, step_id, options)
  api_v1_team_project_experiment_task_protocol_step_checklists_path: Utils.route([["team_id",true],["project_id",true],["experiment_id",true],["task_id",true],["protocol_id",true],["step_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"experiments",false],[2,[7,"/",false],[2,[3,"experiment_id",false],[2,[7,"/",false],[2,[6,"tasks",false],[2,[7,"/",false],[2,[3,"task_id",false],[2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[3,"protocol_id",false],[2,[7,"/",false],[2,[6,"steps",false],[2,[7,"/",false],[2,[3,"step_id",false],[2,[7,"/",false],[2,[6,"checklists",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]),
// api_v1_team_project_experiment_task_protocol_step_table => /api/v1/teams/:team_id/projects/:project_id/experiments/:experiment_id/tasks/:task_id/protocols/:protocol_id/steps/:step_id/tables/:id(.:format)
  // function(team_id, project_id, experiment_id, task_id, protocol_id, step_id, id, options)
  api_v1_team_project_experiment_task_protocol_step_table_path: Utils.route([["team_id",true],["project_id",true],["experiment_id",true],["task_id",true],["protocol_id",true],["step_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"experiments",false],[2,[7,"/",false],[2,[3,"experiment_id",false],[2,[7,"/",false],[2,[6,"tasks",false],[2,[7,"/",false],[2,[3,"task_id",false],[2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[3,"protocol_id",false],[2,[7,"/",false],[2,[6,"steps",false],[2,[7,"/",false],[2,[3,"step_id",false],[2,[7,"/",false],[2,[6,"tables",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]),
// api_v1_team_project_experiment_task_protocol_step_tables => /api/v1/teams/:team_id/projects/:project_id/experiments/:experiment_id/tasks/:task_id/protocols/:protocol_id/steps/:step_id/tables(.:format)
  // function(team_id, project_id, experiment_id, task_id, protocol_id, step_id, options)
  api_v1_team_project_experiment_task_protocol_step_tables_path: Utils.route([["team_id",true],["project_id",true],["experiment_id",true],["task_id",true],["protocol_id",true],["step_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"experiments",false],[2,[7,"/",false],[2,[3,"experiment_id",false],[2,[7,"/",false],[2,[6,"tasks",false],[2,[7,"/",false],[2,[3,"task_id",false],[2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[3,"protocol_id",false],[2,[7,"/",false],[2,[6,"steps",false],[2,[7,"/",false],[2,[3,"step_id",false],[2,[7,"/",false],[2,[6,"tables",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]),
// api_v1_team_project_experiment_task_protocol_steps => /api/v1/teams/:team_id/projects/:project_id/experiments/:experiment_id/tasks/:task_id/protocols/:protocol_id/steps(.:format)
  // function(team_id, project_id, experiment_id, task_id, protocol_id, options)
  api_v1_team_project_experiment_task_protocol_steps_path: Utils.route([["team_id",true],["project_id",true],["experiment_id",true],["task_id",true],["protocol_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"experiments",false],[2,[7,"/",false],[2,[3,"experiment_id",false],[2,[7,"/",false],[2,[6,"tasks",false],[2,[7,"/",false],[2,[3,"task_id",false],[2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[3,"protocol_id",false],[2,[7,"/",false],[2,[6,"steps",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]]]]]]]]]]]]]),
// api_v1_team_project_experiment_task_protocols => /api/v1/teams/:team_id/projects/:project_id/experiments/:experiment_id/tasks/:task_id/protocols(.:format)
  // function(team_id, project_id, experiment_id, task_id, options)
  api_v1_team_project_experiment_task_protocols_path: Utils.route([["team_id",true],["project_id",true],["experiment_id",true],["task_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"experiments",false],[2,[7,"/",false],[2,[3,"experiment_id",false],[2,[7,"/",false],[2,[6,"tasks",false],[2,[7,"/",false],[2,[3,"task_id",false],[2,[7,"/",false],[2,[6,"protocols",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]]]]]]]]]),
// api_v1_team_project_experiment_task_result => /api/v1/teams/:team_id/projects/:project_id/experiments/:experiment_id/tasks/:task_id/results/:id(.:format)
  // function(team_id, project_id, experiment_id, task_id, id, options)
  api_v1_team_project_experiment_task_result_path: Utils.route([["team_id",true],["project_id",true],["experiment_id",true],["task_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"experiments",false],[2,[7,"/",false],[2,[3,"experiment_id",false],[2,[7,"/",false],[2,[6,"tasks",false],[2,[7,"/",false],[2,[3,"task_id",false],[2,[7,"/",false],[2,[6,"results",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]]]]]]]]]]]),
// api_v1_team_project_experiment_task_results => /api/v1/teams/:team_id/projects/:project_id/experiments/:experiment_id/tasks/:task_id/results(.:format)
  // function(team_id, project_id, experiment_id, task_id, options)
  api_v1_team_project_experiment_task_results_path: Utils.route([["team_id",true],["project_id",true],["experiment_id",true],["task_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"experiments",false],[2,[7,"/",false],[2,[3,"experiment_id",false],[2,[7,"/",false],[2,[6,"tasks",false],[2,[7,"/",false],[2,[3,"task_id",false],[2,[7,"/",false],[2,[6,"results",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]]]]]]]]]),
// api_v1_team_project_experiment_task_tag => /api/v1/teams/:team_id/projects/:project_id/experiments/:experiment_id/tasks/:task_id/tags/:id(.:format)
  // function(team_id, project_id, experiment_id, task_id, id, options)
  api_v1_team_project_experiment_task_tag_path: Utils.route([["team_id",true],["project_id",true],["experiment_id",true],["task_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"experiments",false],[2,[7,"/",false],[2,[3,"experiment_id",false],[2,[7,"/",false],[2,[6,"tasks",false],[2,[7,"/",false],[2,[3,"task_id",false],[2,[7,"/",false],[2,[6,"tags",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]]]]]]]]]]]),
// api_v1_team_project_experiment_task_tags => /api/v1/teams/:team_id/projects/:project_id/experiments/:experiment_id/tasks/:task_id/tags(.:format)
  // function(team_id, project_id, experiment_id, task_id, options)
  api_v1_team_project_experiment_task_tags_path: Utils.route([["team_id",true],["project_id",true],["experiment_id",true],["task_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"experiments",false],[2,[7,"/",false],[2,[3,"experiment_id",false],[2,[7,"/",false],[2,[6,"tasks",false],[2,[7,"/",false],[2,[3,"task_id",false],[2,[7,"/",false],[2,[6,"tags",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]]]]]]]]]),
// api_v1_team_project_experiment_task_user => /api/v1/teams/:team_id/projects/:project_id/experiments/:experiment_id/tasks/:task_id/users/:id(.:format)
  // function(team_id, project_id, experiment_id, task_id, id, options)
  api_v1_team_project_experiment_task_user_path: Utils.route([["team_id",true],["project_id",true],["experiment_id",true],["task_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"experiments",false],[2,[7,"/",false],[2,[3,"experiment_id",false],[2,[7,"/",false],[2,[6,"tasks",false],[2,[7,"/",false],[2,[3,"task_id",false],[2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]]]]]]]]]]]),
// api_v1_team_project_experiment_task_users => /api/v1/teams/:team_id/projects/:project_id/experiments/:experiment_id/tasks/:task_id/users(.:format)
  // function(team_id, project_id, experiment_id, task_id, options)
  api_v1_team_project_experiment_task_users_path: Utils.route([["team_id",true],["project_id",true],["experiment_id",true],["task_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"experiments",false],[2,[7,"/",false],[2,[3,"experiment_id",false],[2,[7,"/",false],[2,[6,"tasks",false],[2,[7,"/",false],[2,[3,"task_id",false],[2,[7,"/",false],[2,[6,"users",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]]]]]]]]]),
// api_v1_team_project_experiment_tasks => /api/v1/teams/:team_id/projects/:project_id/experiments/:experiment_id/tasks(.:format)
  // function(team_id, project_id, experiment_id, options)
  api_v1_team_project_experiment_tasks_path: Utils.route([["team_id",true],["project_id",true],["experiment_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"experiments",false],[2,[7,"/",false],[2,[3,"experiment_id",false],[2,[7,"/",false],[2,[6,"tasks",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]]]]]),
// api_v1_team_project_experiments => /api/v1/teams/:team_id/projects/:project_id/experiments(.:format)
  // function(team_id, project_id, options)
  api_v1_team_project_experiments_path: Utils.route([["team_id",true],["project_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"experiments",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]),
// api_v1_team_project_folder => /api/v1/teams/:team_id/project_folders/:id(.:format)
  // function(team_id, id, options)
  api_v1_team_project_folder_path: Utils.route([["team_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"project_folders",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]),
// api_v1_team_project_folders => /api/v1/teams/:team_id/project_folders(.:format)
  // function(team_id, options)
  api_v1_team_project_folders_path: Utils.route([["team_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"project_folders",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// api_v1_team_project_report => /api/v1/teams/:team_id/projects/:project_id/reports/:id(.:format)
  // function(team_id, project_id, id, options)
  api_v1_team_project_report_path: Utils.route([["team_id",true],["project_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"reports",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]]]),
// api_v1_team_project_reports => /api/v1/teams/:team_id/projects/:project_id/reports(.:format)
  // function(team_id, project_id, options)
  api_v1_team_project_reports_path: Utils.route([["team_id",true],["project_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"reports",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]),
// api_v1_team_project_user => /api/v1/teams/:team_id/projects/:project_id/users/:id(.:format)
  // function(team_id, project_id, id, options)
  api_v1_team_project_user_path: Utils.route([["team_id",true],["project_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]]]),
// api_v1_team_project_users => /api/v1/teams/:team_id/projects/:project_id/users(.:format)
  // function(team_id, project_id, options)
  api_v1_team_project_users_path: Utils.route([["team_id",true],["project_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"users",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]]]),
// api_v1_team_projects => /api/v1/teams/:team_id/projects(.:format)
  // function(team_id, options)
  api_v1_team_projects_path: Utils.route([["team_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"projects",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// api_v1_teams => /api/v1/teams(.:format)
  // function(options)
  api_v1_teams_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"teams",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// api_v1_user => /api/v1/users/:id(.:format)
  // function(id, options)
  api_v1_user_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// api_v1_user_identities => /api/v1/users/:user_id/identities(.:format)
  // function(user_id, options)
  api_v1_user_identities_path: Utils.route([["user_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[3,"user_id",false],[2,[7,"/",false],[2,[6,"identities",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// api_v1_user_identity => /api/v1/users/:user_id/identities/:id(.:format)
  // function(user_id, id, options)
  api_v1_user_identity_path: Utils.route([["user_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[3,"user_id",false],[2,[7,"/",false],[2,[6,"identities",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]),
// api_v1_workflow => /api/v1/workflows/:id(.:format)
  // function(id, options)
  api_v1_workflow_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"workflows",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// api_v1_workflow_workflow_statuses => /api/v1/workflows/:workflow_id/statuses(.:format)
  // function(workflow_id, options)
  api_v1_workflow_workflow_statuses_path: Utils.route([["workflow_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"workflows",false],[2,[7,"/",false],[2,[3,"workflow_id",false],[2,[7,"/",false],[2,[6,"statuses",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// api_v1_workflows => /api/v1/workflows(.:format)
  // function(options)
  api_v1_workflows_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"api",false],[2,[7,"/",false],[2,[6,"v1",false],[2,[7,"/",false],[2,[6,"workflows",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// archive_experiment => /experiments/:id/archive(.:format)
  // function(id, options)
  archive_experiment_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"experiments",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"archive",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// archive_group_projects => /projects/archive_group(.:format)
  // function(options)
  archive_group_projects_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[6,"archive_group",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// archive_my_module => /modules/:id/archive(.:format)
  // function(id, options)
  archive_my_module_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"modules",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"archive",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// archive_protocols => /protocols/archive(.:format)
  // function(options)
  archive_protocols_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[6,"archive",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// archive_team_repositories => /teams/:team_id/repositories/archive(.:format)
  // function(team_id, options)
  archive_team_repositories_path: Utils.route([["team_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[6,"archive",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// asset_destroy => /files/:id(.:format)
  // function(id, options)
  asset_destroy_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"files",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// asset_download => /files/:id/download(.:format)
  // function(id, options)
  asset_download_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"files",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"download",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// asset_file_preview => /files/:id/preview(.:format)
  // function(id, options)
  asset_file_preview_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"files",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"preview",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// asset_file_url => /files/:id/file_url(.:format)
  // function(id, options)
  asset_file_url_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"files",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"file_url",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// assign_modal_my_module_repository => /modules/:my_module_id/repositories/:id/assign_repository_records_modal(.:format)
  // function(my_module_id, id, options)
  assign_modal_my_module_repository_path: Utils.route([["my_module_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"modules",false],[2,[7,"/",false],[2,[3,"my_module_id",false],[2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"assign_repository_records_modal",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// assigned_task_list_repository_repository_row => /repositories/:repository_id/repository_rows/:id/assigned_task_list(.:format)
  // function(repository_id, id, options)
  assigned_task_list_repository_repository_row_path: Utils.route([["repository_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"repository_id",false],[2,[7,"/",false],[2,[6,"repository_rows",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"assigned_task_list",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// atwho_experiments_team => /teams/:id/atwho_experiments(.:format)
  // function(id, options)
  atwho_experiments_team_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"atwho_experiments",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// atwho_menu_items_team => /teams/:id/atwho_menu_items(.:format)
  // function(id, options)
  atwho_menu_items_team_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"atwho_menu_items",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// atwho_menu_team => /teams/:id/atwho_menu(.:format)
  // function(id, options)
  atwho_menu_team_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"atwho_menu",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// atwho_my_modules_team => /teams/:id/atwho_my_modules(.:format)
  // function(id, options)
  atwho_my_modules_team_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"atwho_my_modules",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// atwho_projects_team => /teams/:id/atwho_projects(.:format)
  // function(id, options)
  atwho_projects_team_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"atwho_projects",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// atwho_rep_items_team => /teams/:id/atwho_rep_items(.:format)
  // function(id, options)
  atwho_rep_items_team_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"atwho_rep_items",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// atwho_users_team => /teams/:id/atwho_users(.:format)
  // function(id, options)
  atwho_users_team_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"atwho_users",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// authors_protocol => /protocols/:id/authors(.:format)
  // function(id, options)
  authors_protocol_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"authors",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// available_asset_type_columns => /available_asset_type_columns(.:format)
  // function(options)
  available_asset_type_columns_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"available_asset_type_columns",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// available_rows_repositories => /repositories/available_rows(.:format)
  // function(options)
  available_rows_repositories_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[6,"available_rows",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// avatar => /avatar/:id/:style(.:format)
  // function(id, style, options)
  avatar_path: Utils.route([["id",true],["style",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"avatar",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[3,"style",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// cancel_user_registration => /users/cancel(.:format)
  // function(options)
  cancel_user_registration_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"cancel",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// canvas_edit_experiment => /experiments/:id/canvas/edit(.:format)
  // function(id, options)
  canvas_edit_experiment_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"experiments",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"canvas",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// canvas_experiment => /experiments/:id/canvas(.:format)
  // function(id, options)
  canvas_experiment_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"experiments",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"canvas",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// canvas_full_zoom_experiment => /experiments/:id/canvas/full_zoom(.:format)
  // function(id, options)
  canvas_full_zoom_experiment_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"experiments",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"canvas",false],[2,[7,"/",false],[2,[6,"full_zoom",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// canvas_medium_zoom_experiment => /experiments/:id/canvas/medium_zoom(.:format)
  // function(id, options)
  canvas_medium_zoom_experiment_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"experiments",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"canvas",false],[2,[7,"/",false],[2,[6,"medium_zoom",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// canvas_small_zoom_experiment => /experiments/:id/canvas/small_zoom(.:format)
  // function(id, options)
  canvas_small_zoom_experiment_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"experiments",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"canvas",false],[2,[7,"/",false],[2,[6,"small_zoom",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// cards_projects => /projects/cards(.:format)
  // function(options)
  cards_projects_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[6,"cards",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// checklistitem_state_step => /steps/:id/checklistitem_state(.:format)
  // function(id, options)
  checklistitem_state_step_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"steps",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"checklistitem_state",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// clone_experiment => /experiments/:id/clone(.:format)
  // function(id, options)
  clone_experiment_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"experiments",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"clone",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// clone_modal_experiment => /experiments/:id/clone_modal(.:format)
  // function(id, options)
  clone_modal_experiment_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"experiments",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"clone_modal",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// clone_protocol => /protocols/:id/clone(.:format)
  // function(id, options)
  clone_protocol_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"clone",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// comment => /comments/:id(.:format)
  // function(id, options)
  comment_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"comments",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// comments => /comments(.:format)
  // function(options)
  comments_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"comments",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// connected_accounts => /users/settings/account/connected_accounts(.:format)
  // function(options)
  connected_accounts_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"settings",false],[2,[7,"/",false],[2,[6,"account",false],[2,[7,"/",false],[2,[6,"connected_accounts",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// copy_to_repository_modal_protocol => /protocols/:id/copy_to_repository_modal(.:format)
  // function(id, options)
  copy_to_repository_modal_protocol_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"copy_to_repository_modal",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// copy_to_repository_protocol => /protocols/:id/copy_to_repository(.:format)
  // function(id, options)
  copy_to_repository_protocol_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"copy_to_repository",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// create_modal_team_repositories => /teams/:team_id/repositories/create_modal(.:format)
  // function(team_id, options)
  create_modal_team_repositories_path: Utils.route([["team_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[6,"create_modal",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// create_new_modal_protocols => /protocols/create_new_modal(.:format)
  // function(options)
  create_new_modal_protocols_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[6,"create_new_modal",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// create_team => /users/settings/teams(.:format)
  // function(options)
  create_team_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"settings",false],[2,[7,"/",false],[2,[6,"teams",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// create_wopi_file => /files/create_wopi_file(.:format)
  // function(options)
  create_wopi_file_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"files",false],[2,[7,"/",false],[2,[6,"create_wopi_file",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// dashboard => /dashboard(.:format)
  // function(options)
  dashboard_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"dashboard",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// dashboard_calendar => /dashboard/calendar(.:format)
  // function(options)
  dashboard_calendar_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"dashboard",false],[2,[7,"/",false],[2,[6,"calendar",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// dashboard_current_tasks => /dashboard/current_tasks(.:format)
  // function(options)
  dashboard_current_tasks_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"dashboard",false],[2,[7,"/",false],[2,[6,"current_tasks",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// dashboard_quick_start_create_task => /dashboard/quick_start/create_task(.:format)
  // function(options)
  dashboard_quick_start_create_task_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"dashboard",false],[2,[7,"/",false],[2,[6,"quick_start",false],[2,[7,"/",false],[2,[6,"create_task",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// dashboard_quick_start_experiment_filter => /dashboard/quick_start/experiment_filter(.:format)
  // function(options)
  dashboard_quick_start_experiment_filter_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"dashboard",false],[2,[7,"/",false],[2,[6,"quick_start",false],[2,[7,"/",false],[2,[6,"experiment_filter",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// dashboard_quick_start_project_filter => /dashboard/quick_start/project_filter(.:format)
  // function(options)
  dashboard_quick_start_project_filter_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"dashboard",false],[2,[7,"/",false],[2,[6,"quick_start",false],[2,[7,"/",false],[2,[6,"project_filter",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// dashboard_recent_works => /dashboard/recent_works(.:format)
  // function(options)
  dashboard_recent_works_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"dashboard",false],[2,[7,"/",false],[2,[6,"recent_works",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// datatable_protocols => /protocols/datatable(.:format)
  // function(options)
  datatable_protocols_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[6,"datatable",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// day_dashboard_calendar => /dashboard/calendar/day(.:format)
  // function(options)
  day_dashboard_calendar_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"dashboard",false],[2,[7,"/",false],[2,[6,"calendar",false],[2,[7,"/",false],[2,[6,"day",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// description_my_module => /modules/:id/description(.:format)
  // function(id, options)
  description_my_module_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"modules",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"description",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// description_protocol => /protocols/:id/description(.:format)
  // function(id, options)
  description_protocol_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"description",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// destroy_by_tag_id_my_module_my_module_tag => /modules/:my_module_id/tags/:id/destroy_by_tag_id(.:format)
  // function(my_module_id, id, options)
  destroy_by_tag_id_my_module_my_module_tag_path: Utils.route([["my_module_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"modules",false],[2,[7,"/",false],[2,[3,"my_module_id",false],[2,[7,"/",false],[2,[6,"tags",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"destroy_by_tag_id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// destroy_team => /users/settings/teams/:id(.:format)
  // function(id, options)
  destroy_team_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"settings",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// destroy_user_session => /users/sign_out(.:format)
  // function(options)
  destroy_user_session_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"sign_out",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// destroy_user_team => /users/settings/user_teams/:id(.:format)
  // function(id, options)
  destroy_user_team_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"settings",false],[2,[7,"/",false],[2,[6,"user_teams",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// destroy_user_team_html => /users/settings/user_teams/:id/destroy_html(.:format)
  // function(id, options)
  destroy_user_team_html_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"settings",false],[2,[7,"/",false],[2,[6,"user_teams",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"destroy_html",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// download_tiny_mce_asset => /tiny_mce_assets/:id/download(.:format)
  // function(id, options)
  download_tiny_mce_asset_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"tiny_mce_assets",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"download",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// due_date_my_module => /modules/:id/due_date(.:format)
  // function(id, options)
  due_date_my_module_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"modules",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"due_date",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// edit_asset => /files/:id/edit(.:format)
  // function(id, options)
  edit_asset_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"files",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// edit_authors_modal_protocol => /protocols/:id/edit_authors_modal(.:format)
  // function(id, options)
  edit_authors_modal_protocol_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit_authors_modal",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// edit_description_modal_protocol => /protocols/:id/edit_description_modal(.:format)
  // function(id, options)
  edit_description_modal_protocol_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit_description_modal",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// edit_experiment => /experiments/:id/edit(.:format)
  // function(id, options)
  edit_experiment_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"experiments",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// edit_keywords_modal_protocol => /protocols/:id/edit_keywords_modal(.:format)
  // function(id, options)
  edit_keywords_modal_protocol_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit_keywords_modal",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// edit_my_module_my_module_comment => /modules/:my_module_id/comments/:id/edit(.:format)
  // function(my_module_id, id, options)
  edit_my_module_my_module_comment_path: Utils.route([["my_module_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"modules",false],[2,[7,"/",false],[2,[3,"my_module_id",false],[2,[7,"/",false],[2,[6,"comments",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// edit_name_modal_protocol => /protocols/:id/edit_name_modal(.:format)
  // function(id, options)
  edit_name_modal_protocol_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit_name_modal",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// edit_project => /projects/:id/edit(.:format)
  // function(id, options)
  edit_project_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// edit_project_folder => /project_folders/:id/edit(.:format)
  // function(id, options)
  edit_project_folder_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"project_folders",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// edit_project_project_comment => /projects/:project_id/comments/:id/edit(.:format)
  // function(project_id, id, options)
  edit_project_project_comment_path: Utils.route([["project_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"comments",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// edit_project_report => /projects/:project_id/reports/:id/edit(.:format)
  // function(project_id, id, options)
  edit_project_report_path: Utils.route([["project_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"reports",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// edit_protocol => /protocols/:id/edit(.:format)
  // function(id, options)
  edit_protocol_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// edit_rails_conductor_inbound_email => /rails/conductor/action_mailbox/inbound_emails/:id/edit(.:format)
  // function(id, options)
  edit_rails_conductor_inbound_email_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"rails",false],[2,[7,"/",false],[2,[6,"conductor",false],[2,[7,"/",false],[2,[6,"action_mailbox",false],[2,[7,"/",false],[2,[6,"inbound_emails",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]),
// edit_repository => /repositories/:id/edit(.:format)
  // function(id, options)
  edit_repository_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// edit_repository_repository_column => /repositories/:repository_id/repository_columns/:id/edit(.:format)
  // function(repository_id, id, options)
  edit_repository_repository_column_path: Utils.route([["repository_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"repository_id",false],[2,[7,"/",false],[2,[6,"repository_columns",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// edit_result_asset => /result_assets/:id/edit(.:format)
  // function(id, options)
  edit_result_asset_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"result_assets",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// edit_result_result_comment => /results/:result_id/comments/:id/edit(.:format)
  // function(result_id, id, options)
  edit_result_result_comment_path: Utils.route([["result_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"results",false],[2,[7,"/",false],[2,[3,"result_id",false],[2,[7,"/",false],[2,[6,"comments",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// edit_result_table => /result_tables/:id/edit(.:format)
  // function(id, options)
  edit_result_table_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"result_tables",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// edit_result_text => /result_texts/:id/edit(.:format)
  // function(id, options)
  edit_result_text_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"result_texts",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// edit_step => /steps/:id/edit(.:format)
  // function(id, options)
  edit_step_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"steps",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// edit_step_step_comment => /steps/:step_id/comments/:id/edit(.:format)
  // function(step_id, id, options)
  edit_step_step_comment_path: Utils.route([["step_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"steps",false],[2,[7,"/",false],[2,[3,"step_id",false],[2,[7,"/",false],[2,[6,"comments",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// edit_team => /teams/:id/edit(.:format)
  // function(id, options)
  edit_team_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// edit_user_password => /users/password/edit(.:format)
  // function(options)
  edit_user_password_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"password",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// edit_user_registration => /users/edit(.:format)
  // function(options)
  edit_user_registration_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// experiment => /experiments/:id(.:format)
  // function(id, options)
  experiment_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"experiments",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// experiment_archive_project => /projects/:id/experiment_archive(.:format)
  // function(id, options)
  experiment_archive_project_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"experiment_archive",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// experiment_contents_modal_project_reports => /projects/:project_id/reports/new/experiment_contents_modal(.:format)
  // function(project_id, options)
  experiment_contents_modal_project_reports_path: Utils.route([["project_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"reports",false],[2,[7,"/",false],[2,[6,"new",false],[2,[7,"/",false],[2,[6,"experiment_contents_modal",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// experiment_contents_project_reports => /projects/:project_id/reports/new/experiment_contents(.:format)
  // function(project_id, options)
  experiment_contents_project_reports_path: Utils.route([["project_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"reports",false],[2,[7,"/",false],[2,[6,"new",false],[2,[7,"/",false],[2,[6,"experiment_contents",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// experiment_filter_dashboard_current_tasks => /dashboard/current_tasks/experiment_filter(.:format)
  // function(options)
  experiment_filter_dashboard_current_tasks_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"dashboard",false],[2,[7,"/",false],[2,[6,"current_tasks",false],[2,[7,"/",false],[2,[6,"experiment_filter",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// experiment_filter_global_activities => /global_activities/experiment_filter(.:format)
  // function(options)
  experiment_filter_global_activities_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"global_activities",false],[2,[7,"/",false],[2,[6,"experiment_filter",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// experiment_sidebar => /experiments/:experiment_id/sidebar(.:format)
  // function(experiment_id, options)
  experiment_sidebar_path: Utils.route([["experiment_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"experiments",false],[2,[7,"/",false],[2,[3,"experiment_id",false],[2,[7,"/",false],[2,[6,"sidebar",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// export_projects_modal_team => /teams/:id/export_projects_modal(.:format)
  // function(id, options)
  export_projects_modal_team_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"export_projects_modal",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// export_projects_team => /teams/:id/export_projects(.:format)
  // function(id, options)
  export_projects_team_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"export_projects",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// export_protocols => /protocols/export(.:format)
  // function(options)
  export_protocols_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[6,"export",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// export_repository_my_module_repository => /modules/:my_module_id/repositories/:id/export_repository(.:format)
  // function(my_module_id, id, options)
  export_repository_my_module_repository_path: Utils.route([["my_module_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"modules",false],[2,[7,"/",false],[2,[3,"my_module_id",false],[2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"export_repository",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// export_repository_snapshot_my_module_repository_snapshot => /modules/:my_module_id/repository_snapshots/:id/export_repository_snapshot(.:format)
  // function(my_module_id, id, options)
  export_repository_snapshot_my_module_repository_snapshot_path: Utils.route([["my_module_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"modules",false],[2,[7,"/",false],[2,[3,"my_module_id",false],[2,[7,"/",false],[2,[6,"repository_snapshots",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"export_repository_snapshot",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// export_repository_team => /teams/:id/export_repository(.:format)
  // function(id, options)
  export_repository_team_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"export_repository",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// fetch_workflow_img_experiment => /experiments/:id/fetch_workflow_img(.:format)
  // function(id, options)
  fetch_workflow_img_experiment_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"experiments",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"fetch_workflow_img",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// file_expired => /zip_exports/file_expired(.:format)
  // function(options)
  file_expired_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"zip_exports",false],[2,[7,"/",false],[2,[6,"file_expired",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// forbidden => /forbidden(.:format)
  // function(options)
  forbidden_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"forbidden",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// full_view_sidebar_my_module_repository_snapshots => /modules/:my_module_id/repository_snapshots/:repository_id/full_view_sidebar(.:format)
  // function(my_module_id, repository_id, options)
  full_view_sidebar_my_module_repository_snapshots_path: Utils.route([["my_module_id",true],["repository_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"modules",false],[2,[7,"/",false],[2,[3,"my_module_id",false],[2,[7,"/",false],[2,[6,"repository_snapshots",false],[2,[7,"/",false],[2,[3,"repository_id",false],[2,[7,"/",false],[2,[6,"full_view_sidebar",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// full_view_table_my_module_repository => /modules/:my_module_id/repositories/:id/full_view_table(.:format)
  // function(my_module_id, id, options)
  full_view_table_my_module_repository_path: Utils.route([["my_module_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"modules",false],[2,[7,"/",false],[2,[3,"my_module_id",false],[2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"full_view_table",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// full_view_table_my_module_repository_snapshot => /modules/:my_module_id/repository_snapshots/:id/full_view_table(.:format)
  // function(my_module_id, id, options)
  full_view_table_my_module_repository_snapshot_path: Utils.route([["my_module_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"modules",false],[2,[7,"/",false],[2,[3,"my_module_id",false],[2,[7,"/",false],[2,[6,"repository_snapshots",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"full_view_table",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// generate_project_reports => /projects/:project_id/reports/generate(.:format)
  // function(project_id, options)
  generate_project_reports_path: Utils.route([["project_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"reports",false],[2,[7,"/",false],[2,[6,"generate",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// global_activities => /global_activities(.:format)
  // function(options)
  global_activities_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"global_activities",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// import_protocols => /protocols/import(.:format)
  // function(options)
  import_protocols_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[6,"import",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// import_records_repository => /repositories/:id/import_records(.:format)
  // function(id, options)
  import_records_repository_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"import_records",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// index_dt_my_module_repository => /modules/:my_module_id/repositories/:id/index_dt(.:format)
  // function(my_module_id, id, options)
  index_dt_my_module_repository_path: Utils.route([["my_module_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"modules",false],[2,[7,"/",false],[2,[3,"my_module_id",false],[2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"index_dt",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// index_dt_my_module_repository_snapshot => /modules/:my_module_id/repository_snapshots/:id/index_dt(.:format)
  // function(my_module_id, id, options)
  index_dt_my_module_repository_snapshot_path: Utils.route([["my_module_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"modules",false],[2,[7,"/",false],[2,[3,"my_module_id",false],[2,[7,"/",false],[2,[6,"repository_snapshots",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"index_dt",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// index_old_my_module_user_my_modules => /modules/:my_module_id/users/index_old(.:format)
  // function(my_module_id, options)
  index_old_my_module_user_my_modules_path: Utils.route([["my_module_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"modules",false],[2,[7,"/",false],[2,[3,"my_module_id",false],[2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"index_old",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// inventory_filter_global_activities => /global_activities/inventory_filter(.:format)
  // function(options)
  inventory_filter_global_activities_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"global_activities",false],[2,[7,"/",false],[2,[6,"inventory_filter",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// inventory_item_filter_global_activities => /global_activities/inventory_item_filter(.:format)
  // function(options)
  inventory_item_filter_global_activities_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"global_activities",false],[2,[7,"/",false],[2,[6,"inventory_item_filter",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// invite_users => /invite(.:format)
  // function(options)
  invite_users_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"invite",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// items_repository_repository_columns_checklist_column => /repositories/:repository_id/repository_columns/checklist_columns/:id/items(.:format)
  // function(repository_id, id, options)
  items_repository_repository_columns_checklist_column_path: Utils.route([["repository_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"repository_id",false],[2,[7,"/",false],[2,[6,"repository_columns",false],[2,[7,"/",false],[2,[6,"checklist_columns",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"items",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]),
// items_repository_repository_columns_list_column => /repositories/:repository_id/repository_columns/list_columns/:id/items(.:format)
  // function(repository_id, id, options)
  items_repository_repository_columns_list_column_path: Utils.route([["repository_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"repository_id",false],[2,[7,"/",false],[2,[6,"repository_columns",false],[2,[7,"/",false],[2,[6,"list_columns",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"items",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]),
// items_repository_repository_columns_status_column => /repositories/:repository_id/repository_columns/status_columns/:id/items(.:format)
  // function(repository_id, id, options)
  items_repository_repository_columns_status_column_path: Utils.route([["repository_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"repository_id",false],[2,[7,"/",false],[2,[6,"repository_columns",false],[2,[7,"/",false],[2,[6,"status_columns",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"items",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]),
// keywords_protocol => /protocols/:id/keywords(.:format)
  // function(id, options)
  keywords_protocol_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"keywords",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// leave_user_team_html => /users/settings/user_teams/:id/leave_html(.:format)
  // function(id, options)
  leave_user_team_html_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"settings",false],[2,[7,"/",false],[2,[6,"user_teams",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"leave_html",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// linked_children_datatable_protocol => /protocols/:id/linked_children_datatable(.:format)
  // function(id, options)
  linked_children_datatable_protocol_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"linked_children_datatable",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// linked_children_protocol => /protocols/:id/linked_children(.:format)
  // function(id, options)
  linked_children_protocol_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"linked_children",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// load_from_file_protocol => /protocols/:id/load_from_file(.:format)
  // function(id, options)
  load_from_file_protocol_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"load_from_file",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// load_from_repository_datatable_protocol => /protocols/:id/load_from_repository_datatable(.:format)
  // function(id, options)
  load_from_repository_datatable_protocol_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"load_from_repository_datatable",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// load_from_repository_modal_protocol => /protocols/:id/load_from_repository_modal(.:format)
  // function(id, options)
  load_from_repository_modal_protocol_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"load_from_repository_modal",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// load_from_repository_protocol => /protocols/:id/load_from_repository(.:format)
  // function(id, options)
  load_from_repository_protocol_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"load_from_repository",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// load_table_repository => /repositories/:id/load_table(.:format)
  // function(id, options)
  load_table_repository_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"load_table",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// make_private_protocols => /protocols/make_private(.:format)
  // function(options)
  make_private_protocols_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[6,"make_private",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// mark_as_read_system_notification => /system_notifications/:id/mark_as_read(.:format)
  // function(id, options)
  mark_as_read_system_notification_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"system_notifications",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"mark_as_read",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// mark_as_seen_system_notifications => /system_notifications/mark_as_seen(.:format)
  // function(options)
  mark_as_seen_system_notifications_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"system_notifications",false],[2,[7,"/",false],[2,[6,"mark_as_seen",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// marvin_js_asset => /marvin_js_assets/:id(.:format)
  // function(id, options)
  marvin_js_asset_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"marvin_js_assets",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// marvin_js_assets => /marvin_js_assets(.:format)
  // function(options)
  marvin_js_assets_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"marvin_js_assets",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// marvinjs_tiny_mce_asset => /tiny_mce_assets/:id/marvinjs(.:format)
  // function(id, options)
  marvinjs_tiny_mce_asset_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"tiny_mce_assets",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"marvinjs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// marvinjs_tiny_mce_assets => /tiny_mce_assets/marvinjs(.:format)
  // function(options)
  marvinjs_tiny_mce_assets_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"tiny_mce_assets",false],[2,[7,"/",false],[2,[6,"marvinjs",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// module_archive_experiment => /experiments/:id/module_archive(.:format)
  // function(id, options)
  module_archive_experiment_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"experiments",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"module_archive",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// module_contents_modal_project_reports => /projects/:project_id/reports/new/module_contents_modal(.:format)
  // function(project_id, options)
  module_contents_modal_project_reports_path: Utils.route([["project_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"reports",false],[2,[7,"/",false],[2,[6,"new",false],[2,[7,"/",false],[2,[6,"module_contents_modal",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// module_contents_project_reports => /projects/:project_id/reports/new/module_contents(.:format)
  // function(project_id, options)
  module_contents_project_reports_path: Utils.route([["project_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"reports",false],[2,[7,"/",false],[2,[6,"new",false],[2,[7,"/",false],[2,[6,"module_contents",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// move_down_step => /steps/:id/move_down(.:format)
  // function(id, options)
  move_down_step_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"steps",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"move_down",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// move_experiment => /experiments/:id/move(.:format)
  // function(id, options)
  move_experiment_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"experiments",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"move",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// move_modal_experiment => /experiments/:id/move_modal(.:format)
  // function(id, options)
  move_modal_experiment_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"experiments",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"move_modal",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// move_to_modal_project_folders => /project_folders/move_to_modal(.:format)
  // function(options)
  move_to_modal_project_folders_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"project_folders",false],[2,[7,"/",false],[2,[6,"move_to_modal",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// move_to_project_folders => /project_folders/move_to(.:format)
  // function(options)
  move_to_project_folders_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"project_folders",false],[2,[7,"/",false],[2,[6,"move_to",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// move_up_step => /steps/:id/move_up(.:format)
  // function(id, options)
  move_up_step_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"steps",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"move_up",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// my_module => /modules/:id(.:format)
  // function(id, options)
  my_module_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"modules",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// my_module_filter_global_activities => /global_activities/my_module_filter(.:format)
  // function(options)
  my_module_filter_global_activities_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"global_activities",false],[2,[7,"/",false],[2,[6,"my_module_filter",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// my_module_my_module_comment => /modules/:my_module_id/comments/:id(.:format)
  // function(my_module_id, id, options)
  my_module_my_module_comment_path: Utils.route([["my_module_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"modules",false],[2,[7,"/",false],[2,[3,"my_module_id",false],[2,[7,"/",false],[2,[6,"comments",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// my_module_my_module_comments => /modules/:my_module_id/comments(.:format)
  // function(my_module_id, options)
  my_module_my_module_comments_path: Utils.route([["my_module_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"modules",false],[2,[7,"/",false],[2,[3,"my_module_id",false],[2,[7,"/",false],[2,[6,"comments",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// my_module_my_module_tag => /modules/:my_module_id/tags/:id(.:format)
  // function(my_module_id, id, options)
  my_module_my_module_tag_path: Utils.route([["my_module_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"modules",false],[2,[7,"/",false],[2,[3,"my_module_id",false],[2,[7,"/",false],[2,[6,"tags",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// my_module_my_module_tags => /modules/:my_module_id/tags(.:format)
  // function(my_module_id, options)
  my_module_my_module_tags_path: Utils.route([["my_module_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"modules",false],[2,[7,"/",false],[2,[3,"my_module_id",false],[2,[7,"/",false],[2,[6,"tags",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// my_module_repositories_dropdown_list => /modules/:my_module_id/repositories_dropdown_list(.:format)
  // function(my_module_id, options)
  my_module_repositories_dropdown_list_path: Utils.route([["my_module_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"modules",false],[2,[7,"/",false],[2,[3,"my_module_id",false],[2,[7,"/",false],[2,[6,"repositories_dropdown_list",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// my_module_repositories_list_html => /modules/:my_module_id/repositories_list_html(.:format)
  // function(my_module_id, options)
  my_module_repositories_list_html_path: Utils.route([["my_module_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"modules",false],[2,[7,"/",false],[2,[3,"my_module_id",false],[2,[7,"/",false],[2,[6,"repositories_list_html",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// my_module_repository => /modules/:my_module_id/repositories/:id(.:format)
  // function(my_module_id, id, options)
  my_module_repository_path: Utils.route([["my_module_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"modules",false],[2,[7,"/",false],[2,[3,"my_module_id",false],[2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// my_module_repository_snapshot => /modules/:my_module_id/repository_snapshots/:id(.:format)
  // function(my_module_id, id, options)
  my_module_repository_snapshot_path: Utils.route([["my_module_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"modules",false],[2,[7,"/",false],[2,[3,"my_module_id",false],[2,[7,"/",false],[2,[6,"repository_snapshots",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// my_module_repository_snapshots => /modules/:my_module_id/repository_snapshots/:repository_id(.:format)
  // function(my_module_id, repository_id, options)
  my_module_repository_snapshots_path: Utils.route([["my_module_id",true],["repository_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"modules",false],[2,[7,"/",false],[2,[3,"my_module_id",false],[2,[7,"/",false],[2,[6,"repository_snapshots",false],[2,[7,"/",false],[2,[3,"repository_id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// my_module_result_assets => /modules/:my_module_id/result_assets(.:format)
  // function(my_module_id, options)
  my_module_result_assets_path: Utils.route([["my_module_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"modules",false],[2,[7,"/",false],[2,[3,"my_module_id",false],[2,[7,"/",false],[2,[6,"result_assets",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// my_module_result_tables => /modules/:my_module_id/result_tables(.:format)
  // function(my_module_id, options)
  my_module_result_tables_path: Utils.route([["my_module_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"modules",false],[2,[7,"/",false],[2,[3,"my_module_id",false],[2,[7,"/",false],[2,[6,"result_tables",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// my_module_result_texts => /modules/:my_module_id/result_texts(.:format)
  // function(my_module_id, options)
  my_module_result_texts_path: Utils.route([["my_module_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"modules",false],[2,[7,"/",false],[2,[3,"my_module_id",false],[2,[7,"/",false],[2,[6,"result_texts",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// my_module_select_default_snapshot => /modules/:my_module_id/select_default_snapshot(.:format)
  // function(my_module_id, options)
  my_module_select_default_snapshot_path: Utils.route([["my_module_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"modules",false],[2,[7,"/",false],[2,[3,"my_module_id",false],[2,[7,"/",false],[2,[6,"select_default_snapshot",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// my_module_status_flow => /modules/:my_module_id/status_flow(.:format)
  // function(my_module_id, options)
  my_module_status_flow_path: Utils.route([["my_module_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"modules",false],[2,[7,"/",false],[2,[3,"my_module_id",false],[2,[7,"/",false],[2,[6,"status_flow",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// my_module_tags_edit => /modules/:my_module_id/tags/edit(.:format)
  // function(my_module_id, options)
  my_module_tags_edit_path: Utils.route([["my_module_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"modules",false],[2,[7,"/",false],[2,[3,"my_module_id",false],[2,[7,"/",false],[2,[6,"tags",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// my_module_tags_experiment => /experiments/:id/my_module_tags(.:format)
  // function(id, options)
  my_module_tags_experiment_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"experiments",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"my_module_tags",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// my_module_user_my_module => /modules/:my_module_id/users/:id(.:format)
  // function(my_module_id, id, options)
  my_module_user_my_module_path: Utils.route([["my_module_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"modules",false],[2,[7,"/",false],[2,[3,"my_module_id",false],[2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// my_module_user_my_modules => /modules/:my_module_id/users(.:format)
  // function(my_module_id, options)
  my_module_user_my_modules_path: Utils.route([["my_module_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"modules",false],[2,[7,"/",false],[2,[3,"my_module_id",false],[2,[7,"/",false],[2,[6,"users",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// my_module_users_edit => /modules/:my_module_id/users/edit(.:format)
  // function(my_module_id, options)
  my_module_users_edit_path: Utils.route([["my_module_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"modules",false],[2,[7,"/",false],[2,[3,"my_module_id",false],[2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// name_protocol => /protocols/:id/name(.:format)
  // function(id, options)
  name_protocol_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"name",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// native_oauth_authorization => /oauth/authorize/native(.:format)
  // function(options)
  native_oauth_authorization_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"oauth",false],[2,[7,"/",false],[2,[6,"authorize",false],[2,[7,"/",false],[2,[6,"native",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// new_my_module_result_asset => /modules/:my_module_id/result_assets/new(.:format)
  // function(my_module_id, options)
  new_my_module_result_asset_path: Utils.route([["my_module_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"modules",false],[2,[7,"/",false],[2,[3,"my_module_id",false],[2,[7,"/",false],[2,[6,"result_assets",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// new_my_module_result_table => /modules/:my_module_id/result_tables/new(.:format)
  // function(my_module_id, options)
  new_my_module_result_table_path: Utils.route([["my_module_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"modules",false],[2,[7,"/",false],[2,[3,"my_module_id",false],[2,[7,"/",false],[2,[6,"result_tables",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// new_my_module_result_text => /modules/:my_module_id/result_texts/new(.:format)
  // function(my_module_id, options)
  new_my_module_result_text_path: Utils.route([["my_module_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"modules",false],[2,[7,"/",false],[2,[3,"my_module_id",false],[2,[7,"/",false],[2,[6,"result_texts",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// new_project => /projects/new(.:format)
  // function(options)
  new_project_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// new_project_experiment => /projects/:project_id/experiments/new(.:format)
  // function(project_id, options)
  new_project_experiment_path: Utils.route([["project_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"experiments",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// new_project_folder => /project_folders/new(.:format)
  // function(options)
  new_project_folder_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"project_folders",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// new_project_reports => /projects/:project_id/reports/new(.:format)
  // function(project_id, options)
  new_project_reports_path: Utils.route([["project_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"reports",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// new_protocol_step => /protocols/:protocol_id/steps/new(.:format)
  // function(protocol_id, options)
  new_protocol_step_path: Utils.route([["protocol_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[3,"protocol_id",false],[2,[7,"/",false],[2,[6,"steps",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// new_rails_conductor_inbound_email => /rails/conductor/action_mailbox/inbound_emails/new(.:format)
  // function(options)
  new_rails_conductor_inbound_email_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"rails",false],[2,[7,"/",false],[2,[6,"conductor",false],[2,[7,"/",false],[2,[6,"action_mailbox",false],[2,[7,"/",false],[2,[6,"inbound_emails",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// new_repository => /repositories/new(.:format)
  // function(options)
  new_repository_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// new_repository_repository_column => /repositories/:repository_id/repository_columns/new(.:format)
  // function(repository_id, options)
  new_repository_repository_column_path: Utils.route([["repository_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"repository_id",false],[2,[7,"/",false],[2,[6,"repository_columns",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// new_search => /search/new(.:format)
  // function(options)
  new_search_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"search",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// new_team => /users/settings/teams/new(.:format)
  // function(options)
  new_team_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"settings",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// new_user_confirmation => /users/confirmation/new(.:format)
  // function(options)
  new_user_confirmation_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"confirmation",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// new_user_invitation => /users/invitation/new(.:format)
  // function(options)
  new_user_invitation_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"invitation",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// new_user_password => /users/password/new(.:format)
  // function(options)
  new_user_password_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"password",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// new_user_registration => /users/sign_up(.:format)
  // function(options)
  new_user_registration_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"sign_up",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// new_user_session => /users/sign_in(.:format)
  // function(options)
  new_user_session_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"sign_in",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// new_user_unlock => /users/unlock/new(.:format)
  // function(options)
  new_user_unlock_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"unlock",false],[2,[7,"/",false],[2,[6,"new",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// not_found => /not_found(.:format)
  // function(options)
  not_found_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"not_found",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// notifications => /users/notifications(.:format)
  // function(options)
  notifications_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"notifications",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// notifications_project => /projects/:id/notifications(.:format)
  // function(id, options)
  notifications_project_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"notifications",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// oauth_authorization => /oauth/authorize(.:format)
  // function(options)
  oauth_authorization_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"oauth",false],[2,[7,"/",false],[2,[6,"authorize",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// oauth_introspect => /oauth/introspect(.:format)
  // function(options)
  oauth_introspect_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"oauth",false],[2,[7,"/",false],[2,[6,"introspect",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// oauth_revoke => /oauth/revoke(.:format)
  // function(options)
  oauth_revoke_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"oauth",false],[2,[7,"/",false],[2,[6,"revoke",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// oauth_token => /oauth/token(.:format)
  // function(options)
  oauth_token_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"oauth",false],[2,[7,"/",false],[2,[6,"token",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// parse_sheet_repository => /repositories/:id/parse_sheet(.:format)
  // function(id, options)
  parse_sheet_repository_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"parse_sheet",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// parse_sheet_team => /teams/:id/parse_sheet(.:format)
  // function(id, options)
  parse_sheet_team_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"parse_sheet",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// preferences => /users/settings/account/preferences(.:format)
  // function(options)
  preferences_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"settings",false],[2,[7,"/",false],[2,[6,"account",false],[2,[7,"/",false],[2,[6,"preferences",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// preview_asset => /files/:id/preview(.:format)
  // function(id, options)
  preview_asset_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"files",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"preview",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// preview_protocol => /protocols/:id/preview(.:format)
  // function(id, options)
  preview_protocol_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"preview",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// project => /projects/:id(.:format)
  // function(id, options)
  project_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// project_contents_modal_project_reports => /projects/:project_id/reports/new/project_contents_modal(.:format)
  // function(project_id, options)
  project_contents_modal_project_reports_path: Utils.route([["project_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"reports",false],[2,[7,"/",false],[2,[6,"new",false],[2,[7,"/",false],[2,[6,"project_contents_modal",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// project_contents_project_reports => /projects/:project_id/reports/new/project_contents(.:format)
  // function(project_id, options)
  project_contents_project_reports_path: Utils.route([["project_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"reports",false],[2,[7,"/",false],[2,[6,"new",false],[2,[7,"/",false],[2,[6,"project_contents",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// project_experiments => /projects/:project_id/experiments(.:format)
  // function(project_id, options)
  project_experiments_path: Utils.route([["project_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"experiments",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// project_filter_dashboard_current_tasks => /dashboard/current_tasks/project_filter(.:format)
  // function(options)
  project_filter_dashboard_current_tasks_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"dashboard",false],[2,[7,"/",false],[2,[6,"current_tasks",false],[2,[7,"/",false],[2,[6,"project_filter",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// project_filter_global_activities => /global_activities/project_filter(.:format)
  // function(options)
  project_filter_global_activities_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"global_activities",false],[2,[7,"/",false],[2,[6,"project_filter",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// project_folder => /project_folders/:id(.:format)
  // function(id, options)
  project_folder_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"project_folders",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// project_folder_cards => /project_folders/:project_folder_id/cards(.:format)
  // function(project_folder_id, options)
  project_folder_cards_path: Utils.route([["project_folder_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"project_folders",false],[2,[7,"/",false],[2,[3,"project_folder_id",false],[2,[7,"/",false],[2,[6,"cards",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// project_folder_projects => /project_folders/:project_folder_id(.:format)
  // function(project_folder_id, options)
  project_folder_projects_path: Utils.route([["project_folder_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"project_folders",false],[2,[7,"/",false],[2,[3,"project_folder_id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// project_folders => /project_folders(.:format)
  // function(options)
  project_folders_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"project_folders",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// project_project_activities => /projects/:project_id/activities(.:format)
  // function(project_id, options)
  project_project_activities_path: Utils.route([["project_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"activities",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// project_project_comment => /projects/:project_id/comments/:id(.:format)
  // function(project_id, id, options)
  project_project_comment_path: Utils.route([["project_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"comments",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// project_project_comments => /projects/:project_id/comments(.:format)
  // function(project_id, options)
  project_project_comments_path: Utils.route([["project_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"comments",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// project_report => /projects/:project_id/reports/:id(.:format)
  // function(project_id, id, options)
  project_report_path: Utils.route([["project_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"reports",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// project_reports => /projects/:project_id/reports(.:format)
  // function(project_id, options)
  project_reports_path: Utils.route([["project_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"reports",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// project_sidebar => /projects/:project_id/sidebar(.:format)
  // function(project_id, options)
  project_sidebar_path: Utils.route([["project_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"sidebar",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// project_tag => /projects/:project_id/tags/:id(.:format)
  // function(project_id, id, options)
  project_tag_path: Utils.route([["project_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"tags",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// project_tags => /projects/:project_id/tags(.:format)
  // function(project_id, options)
  project_tags_path: Utils.route([["project_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"tags",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// project_user_project => /projects/:project_id/users/:id(.:format)
  // function(project_id, id, options)
  project_user_project_path: Utils.route([["project_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// project_user_projects => /projects/:project_id/users(.:format)
  // function(project_id, options)
  project_user_projects_path: Utils.route([["project_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"users",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// project_users_edit => /projects/:project_id/users/edit(.:format)
  // function(project_id, options)
  project_users_edit_path: Utils.route([["project_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"edit",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// projects => /projects(.:format)
  // function(options)
  projects_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"projects",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// protocol_filter_global_activities => /global_activities/protocol_filter(.:format)
  // function(options)
  protocol_filter_global_activities_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"global_activities",false],[2,[7,"/",false],[2,[6,"protocol_filter",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// protocol_status_bar_protocol => /protocols/:id/protocol_status_bar(.:format)
  // function(id, options)
  protocol_status_bar_protocol_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"protocol_status_bar",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// protocol_steps => /protocols/:protocol_id/steps(.:format)
  // function(protocol_id, options)
  protocol_steps_path: Utils.route([["protocol_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[3,"protocol_id",false],[2,[7,"/",false],[2,[6,"steps",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// protocols => /protocols(.:format)
  // function(options)
  protocols_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"protocols",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// protocols_my_module => /modules/:id/protocols(.:format)
  // function(id, options)
  protocols_my_module_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"modules",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"protocols",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// protocolsio_import_create_protocols => /protocols/protocolsio_import_create(.:format)
  // function(options)
  protocolsio_import_create_protocols_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[6,"protocolsio_import_create",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// protocolsio_import_save_protocols => /protocols/protocolsio_import_save(.:format)
  // function(options)
  protocolsio_import_save_protocols_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[6,"protocolsio_import_save",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// publish_protocols => /protocols/publish(.:format)
  // function(options)
  publish_protocols_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[6,"publish",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// rails_blob_representation => /rails/active_storage/representations/:signed_blob_id/:variation_key/*filename(.:format)
  // function(signed_blob_id, variation_key, filename, options)
  rails_blob_representation_path: Utils.route([["signed_blob_id",true],["variation_key",true],["filename",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"rails",false],[2,[7,"/",false],[2,[6,"active_storage",false],[2,[7,"/",false],[2,[6,"representations",false],[2,[7,"/",false],[2,[3,"signed_blob_id",false],[2,[7,"/",false],[2,[3,"variation_key",false],[2,[7,"/",false],[2,[5,[3,"filename",false],false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]),
// rails_conductor_inbound_email => /rails/conductor/action_mailbox/inbound_emails/:id(.:format)
  // function(id, options)
  rails_conductor_inbound_email_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"rails",false],[2,[7,"/",false],[2,[6,"conductor",false],[2,[7,"/",false],[2,[6,"action_mailbox",false],[2,[7,"/",false],[2,[6,"inbound_emails",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// rails_conductor_inbound_email_reroute => /rails/conductor/action_mailbox/:inbound_email_id/reroute(.:format)
  // function(inbound_email_id, options)
  rails_conductor_inbound_email_reroute_path: Utils.route([["inbound_email_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"rails",false],[2,[7,"/",false],[2,[6,"conductor",false],[2,[7,"/",false],[2,[6,"action_mailbox",false],[2,[7,"/",false],[2,[3,"inbound_email_id",false],[2,[7,"/",false],[2,[6,"reroute",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// rails_conductor_inbound_emails => /rails/conductor/action_mailbox/inbound_emails(.:format)
  // function(options)
  rails_conductor_inbound_emails_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"rails",false],[2,[7,"/",false],[2,[6,"conductor",false],[2,[7,"/",false],[2,[6,"action_mailbox",false],[2,[7,"/",false],[2,[6,"inbound_emails",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// rails_direct_uploads => /rails/active_storage/direct_uploads(.:format)
  // function(options)
  rails_direct_uploads_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"rails",false],[2,[7,"/",false],[2,[6,"active_storage",false],[2,[7,"/",false],[2,[6,"direct_uploads",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// rails_disk_service => /rails/active_storage/disk/:encoded_key/*filename(.:format)
  // function(encoded_key, filename, options)
  rails_disk_service_path: Utils.route([["encoded_key",true],["filename",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"rails",false],[2,[7,"/",false],[2,[6,"active_storage",false],[2,[7,"/",false],[2,[6,"disk",false],[2,[7,"/",false],[2,[3,"encoded_key",false],[2,[7,"/",false],[2,[5,[3,"filename",false],false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// rails_info => /rails/info(.:format)
  // function(options)
  rails_info_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"rails",false],[2,[7,"/",false],[2,[6,"info",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// rails_info_properties => /rails/info/properties(.:format)
  // function(options)
  rails_info_properties_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"rails",false],[2,[7,"/",false],[2,[6,"info",false],[2,[7,"/",false],[2,[6,"properties",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// rails_info_routes => /rails/info/routes(.:format)
  // function(options)
  rails_info_routes_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"rails",false],[2,[7,"/",false],[2,[6,"info",false],[2,[7,"/",false],[2,[6,"routes",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// rails_mailers => /rails/mailers(.:format)
  // function(options)
  rails_mailers_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"rails",false],[2,[7,"/",false],[2,[6,"mailers",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// rails_mailgun_inbound_emails => /rails/action_mailbox/mailgun/inbound_emails/mime(.:format)
  // function(options)
  rails_mailgun_inbound_emails_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"rails",false],[2,[7,"/",false],[2,[6,"action_mailbox",false],[2,[7,"/",false],[2,[6,"mailgun",false],[2,[7,"/",false],[2,[6,"inbound_emails",false],[2,[7,"/",false],[2,[6,"mime",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// rails_mandrill_inbound_emails => /rails/action_mailbox/mandrill/inbound_emails(.:format)
  // function(options)
  rails_mandrill_inbound_emails_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"rails",false],[2,[7,"/",false],[2,[6,"action_mailbox",false],[2,[7,"/",false],[2,[6,"mandrill",false],[2,[7,"/",false],[2,[6,"inbound_emails",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// rails_mandrill_inbound_health_check => /rails/action_mailbox/mandrill/inbound_emails(.:format)
  // function(options)
  rails_mandrill_inbound_health_check_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"rails",false],[2,[7,"/",false],[2,[6,"action_mailbox",false],[2,[7,"/",false],[2,[6,"mandrill",false],[2,[7,"/",false],[2,[6,"inbound_emails",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// rails_postmark_inbound_emails => /rails/action_mailbox/postmark/inbound_emails(.:format)
  // function(options)
  rails_postmark_inbound_emails_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"rails",false],[2,[7,"/",false],[2,[6,"action_mailbox",false],[2,[7,"/",false],[2,[6,"postmark",false],[2,[7,"/",false],[2,[6,"inbound_emails",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// rails_relay_inbound_emails => /rails/action_mailbox/relay/inbound_emails(.:format)
  // function(options)
  rails_relay_inbound_emails_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"rails",false],[2,[7,"/",false],[2,[6,"action_mailbox",false],[2,[7,"/",false],[2,[6,"relay",false],[2,[7,"/",false],[2,[6,"inbound_emails",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// rails_sendgrid_inbound_emails => /rails/action_mailbox/sendgrid/inbound_emails(.:format)
  // function(options)
  rails_sendgrid_inbound_emails_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"rails",false],[2,[7,"/",false],[2,[6,"action_mailbox",false],[2,[7,"/",false],[2,[6,"sendgrid",false],[2,[7,"/",false],[2,[6,"inbound_emails",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// rails_service_blob => /rails/active_storage/blobs/:signed_id/*filename(.:format)
  // function(signed_id, filename, options)
  rails_service_blob_path: Utils.route([["signed_id",true],["filename",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"rails",false],[2,[7,"/",false],[2,[6,"active_storage",false],[2,[7,"/",false],[2,[6,"blobs",false],[2,[7,"/",false],[2,[3,"signed_id",false],[2,[7,"/",false],[2,[5,[3,"filename",false],false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// recent_notifications => /users/:id/recent_notifications(.:format)
  // function(id, options)
  recent_notifications_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"recent_notifications",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// remove_user_invitation => /users/invitation/remove(.:format)
  // function(options)
  remove_user_invitation_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"invitation",false],[2,[7,"/",false],[2,[6,"remove",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// report_filter_global_activities => /global_activities/report_filter(.:format)
  // function(options)
  report_filter_global_activities_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"global_activities",false],[2,[7,"/",false],[2,[6,"report_filter",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// reports => /reports(.:format)
  // function(options)
  reports_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"reports",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// reports_available_repositories => /reports/available_repositories(.:format)
  // function(options)
  reports_available_repositories_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"reports",false],[2,[7,"/",false],[2,[6,"available_repositories",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// reports_datatable => /reports/datatable(.:format)
  // function(options)
  reports_datatable_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"reports",false],[2,[7,"/",false],[2,[6,"datatable",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// reports_destroy => /reports/destroy(.:format)
  // function(options)
  reports_destroy_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"reports",false],[2,[7,"/",false],[2,[6,"destroy",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// reports_save_pdf_to_inventory_item => /reports/save_pdf_to_inventory_item(.:format)
  // function(options)
  reports_save_pdf_to_inventory_item_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"reports",false],[2,[7,"/",false],[2,[6,"save_pdf_to_inventory_item",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// reports_visible_projects => /reports/visible_projects(.:format)
  // function(options)
  reports_visible_projects_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"reports",false],[2,[7,"/",false],[2,[6,"visible_projects",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// repositories => /repositories(.:format)
  // function(options)
  repositories_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"repositories",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// repository => /repositories/:id(.:format)
  // function(id, options)
  repository_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// repository_archive_records => /repositories/:repository_id/archive_records(.:format)
  // function(repository_id, options)
  repository_archive_records_path: Utils.route([["repository_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"repository_id",false],[2,[7,"/",false],[2,[6,"archive_records",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// repository_available_columns => /repositories/:repository_id/available_columns(.:format)
  // function(repository_id, options)
  repository_available_columns_path: Utils.route([["repository_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"repository_id",false],[2,[7,"/",false],[2,[6,"available_columns",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// repository_columns_destroy_html => /repositories/:repository_id/repository_columns/:id/destroy_html(.:format)
  // function(repository_id, id, options)
  repository_columns_destroy_html_path: Utils.route([["repository_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"repository_id",false],[2,[7,"/",false],[2,[6,"repository_columns",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"destroy_html",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// repository_copy_records => /repositories/:repository_id/copy_records(.:format)
  // function(repository_id, options)
  repository_copy_records_path: Utils.route([["repository_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"repository_id",false],[2,[7,"/",false],[2,[6,"copy_records",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// repository_delete_records => /repositories/:repository_id/delete_records(.:format)
  // function(repository_id, options)
  repository_delete_records_path: Utils.route([["repository_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"repository_id",false],[2,[7,"/",false],[2,[6,"delete_records",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// repository_load_table_state => /repositories/:repository_id/state_load(.:format)
  // function(repository_id, options)
  repository_load_table_state_path: Utils.route([["repository_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"repository_id",false],[2,[7,"/",false],[2,[6,"state_load",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// repository_repository_column => /repositories/:repository_id/repository_columns/:id(.:format)
  // function(repository_id, id, options)
  repository_repository_column_path: Utils.route([["repository_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"repository_id",false],[2,[7,"/",false],[2,[6,"repository_columns",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// repository_repository_columns => /repositories/:repository_id/repository_columns(.:format)
  // function(repository_id, options)
  repository_repository_columns_path: Utils.route([["repository_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"repository_id",false],[2,[7,"/",false],[2,[6,"repository_columns",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// repository_repository_columns_asset_column => /repositories/:repository_id/repository_columns/asset_columns/:id(.:format)
  // function(repository_id, id, options)
  repository_repository_columns_asset_column_path: Utils.route([["repository_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"repository_id",false],[2,[7,"/",false],[2,[6,"repository_columns",false],[2,[7,"/",false],[2,[6,"asset_columns",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// repository_repository_columns_asset_columns => /repositories/:repository_id/repository_columns/asset_columns(.:format)
  // function(repository_id, options)
  repository_repository_columns_asset_columns_path: Utils.route([["repository_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"repository_id",false],[2,[7,"/",false],[2,[6,"repository_columns",false],[2,[7,"/",false],[2,[6,"asset_columns",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// repository_repository_columns_checklist_column => /repositories/:repository_id/repository_columns/checklist_columns/:id(.:format)
  // function(repository_id, id, options)
  repository_repository_columns_checklist_column_path: Utils.route([["repository_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"repository_id",false],[2,[7,"/",false],[2,[6,"repository_columns",false],[2,[7,"/",false],[2,[6,"checklist_columns",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// repository_repository_columns_checklist_columns => /repositories/:repository_id/repository_columns/checklist_columns(.:format)
  // function(repository_id, options)
  repository_repository_columns_checklist_columns_path: Utils.route([["repository_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"repository_id",false],[2,[7,"/",false],[2,[6,"repository_columns",false],[2,[7,"/",false],[2,[6,"checklist_columns",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// repository_repository_columns_date_column => /repositories/:repository_id/repository_columns/date_columns/:id(.:format)
  // function(repository_id, id, options)
  repository_repository_columns_date_column_path: Utils.route([["repository_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"repository_id",false],[2,[7,"/",false],[2,[6,"repository_columns",false],[2,[7,"/",false],[2,[6,"date_columns",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// repository_repository_columns_date_columns => /repositories/:repository_id/repository_columns/date_columns(.:format)
  // function(repository_id, options)
  repository_repository_columns_date_columns_path: Utils.route([["repository_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"repository_id",false],[2,[7,"/",false],[2,[6,"repository_columns",false],[2,[7,"/",false],[2,[6,"date_columns",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// repository_repository_columns_date_time_column => /repositories/:repository_id/repository_columns/date_time_columns/:id(.:format)
  // function(repository_id, id, options)
  repository_repository_columns_date_time_column_path: Utils.route([["repository_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"repository_id",false],[2,[7,"/",false],[2,[6,"repository_columns",false],[2,[7,"/",false],[2,[6,"date_time_columns",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// repository_repository_columns_date_time_columns => /repositories/:repository_id/repository_columns/date_time_columns(.:format)
  // function(repository_id, options)
  repository_repository_columns_date_time_columns_path: Utils.route([["repository_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"repository_id",false],[2,[7,"/",false],[2,[6,"repository_columns",false],[2,[7,"/",false],[2,[6,"date_time_columns",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// repository_repository_columns_list_column => /repositories/:repository_id/repository_columns/list_columns/:id(.:format)
  // function(repository_id, id, options)
  repository_repository_columns_list_column_path: Utils.route([["repository_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"repository_id",false],[2,[7,"/",false],[2,[6,"repository_columns",false],[2,[7,"/",false],[2,[6,"list_columns",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// repository_repository_columns_list_columns => /repositories/:repository_id/repository_columns/list_columns(.:format)
  // function(repository_id, options)
  repository_repository_columns_list_columns_path: Utils.route([["repository_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"repository_id",false],[2,[7,"/",false],[2,[6,"repository_columns",false],[2,[7,"/",false],[2,[6,"list_columns",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// repository_repository_columns_number_column => /repositories/:repository_id/repository_columns/number_columns/:id(.:format)
  // function(repository_id, id, options)
  repository_repository_columns_number_column_path: Utils.route([["repository_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"repository_id",false],[2,[7,"/",false],[2,[6,"repository_columns",false],[2,[7,"/",false],[2,[6,"number_columns",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// repository_repository_columns_number_columns => /repositories/:repository_id/repository_columns/number_columns(.:format)
  // function(repository_id, options)
  repository_repository_columns_number_columns_path: Utils.route([["repository_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"repository_id",false],[2,[7,"/",false],[2,[6,"repository_columns",false],[2,[7,"/",false],[2,[6,"number_columns",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// repository_repository_columns_status_column => /repositories/:repository_id/repository_columns/status_columns/:id(.:format)
  // function(repository_id, id, options)
  repository_repository_columns_status_column_path: Utils.route([["repository_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"repository_id",false],[2,[7,"/",false],[2,[6,"repository_columns",false],[2,[7,"/",false],[2,[6,"status_columns",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// repository_repository_columns_status_columns => /repositories/:repository_id/repository_columns/status_columns(.:format)
  // function(repository_id, options)
  repository_repository_columns_status_columns_path: Utils.route([["repository_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"repository_id",false],[2,[7,"/",false],[2,[6,"repository_columns",false],[2,[7,"/",false],[2,[6,"status_columns",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// repository_repository_columns_text_column => /repositories/:repository_id/repository_columns/text_columns/:id(.:format)
  // function(repository_id, id, options)
  repository_repository_columns_text_column_path: Utils.route([["repository_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"repository_id",false],[2,[7,"/",false],[2,[6,"repository_columns",false],[2,[7,"/",false],[2,[6,"text_columns",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// repository_repository_columns_text_columns => /repositories/:repository_id/repository_columns/text_columns(.:format)
  // function(repository_id, options)
  repository_repository_columns_text_columns_path: Utils.route([["repository_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"repository_id",false],[2,[7,"/",false],[2,[6,"repository_columns",false],[2,[7,"/",false],[2,[6,"text_columns",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// repository_repository_row => /repositories/:repository_id/repository_rows/:id(.:format)
  // function(repository_id, id, options)
  repository_repository_row_path: Utils.route([["repository_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"repository_id",false],[2,[7,"/",false],[2,[6,"repository_rows",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// repository_repository_rows => /repositories/:repository_id/repository_rows(.:format)
  // function(repository_id, options)
  repository_repository_rows_path: Utils.route([["repository_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"repository_id",false],[2,[7,"/",false],[2,[6,"repository_rows",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// repository_restore_records => /repositories/:repository_id/restore_records(.:format)
  // function(repository_id, options)
  repository_restore_records_path: Utils.route([["repository_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"repository_id",false],[2,[7,"/",false],[2,[6,"restore_records",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// repository_save_table_state => /repositories/:repository_id/state_save(.:format)
  // function(repository_id, options)
  repository_save_table_state_path: Utils.route([["repository_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"repository_id",false],[2,[7,"/",false],[2,[6,"state_save",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// repository_status => /repositories/:repository_id/status(.:format)
  // function(repository_id, options)
  repository_status_path: Utils.route([["repository_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"repository_id",false],[2,[7,"/",false],[2,[6,"status",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// repository_table_index => /repositories/:repository_id/repository_index(.:format)
  // function(repository_id, options)
  repository_table_index_path: Utils.route([["repository_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"repository_id",false],[2,[7,"/",false],[2,[6,"repository_index",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// repository_table_toolbar => /repositories/:repository_id/table_toolbar(.:format)
  // function(repository_id, options)
  repository_table_toolbar_path: Utils.route([["repository_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"repository_id",false],[2,[7,"/",false],[2,[6,"table_toolbar",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// restore_group_projects => /projects/restore_group(.:format)
  // function(options)
  restore_group_projects_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[6,"restore_group",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// restore_my_modules_experiment => /experiments/:id/restore_my_modules(.:format)
  // function(id, options)
  restore_my_modules_experiment_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"experiments",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"restore_my_modules",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// restore_protocols => /protocols/restore(.:format)
  // function(options)
  restore_protocols_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[6,"restore",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// restore_team_repositories => /teams/:team_id/repositories/restore(.:format)
  // function(team_id, options)
  restore_team_repositories_path: Utils.route([["team_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[6,"restore",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// result => /results/:id(.:format)
  // function(id, options)
  result_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"results",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// result_asset => /result_assets/:id(.:format)
  // function(id, options)
  result_asset_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"result_assets",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// result_contents_modal_project_reports => /projects/:project_id/reports/new/result_contents_modal(.:format)
  // function(project_id, options)
  result_contents_modal_project_reports_path: Utils.route([["project_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"reports",false],[2,[7,"/",false],[2,[6,"new",false],[2,[7,"/",false],[2,[6,"result_contents_modal",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// result_contents_project_reports => /projects/:project_id/reports/new/result_contents(.:format)
  // function(project_id, options)
  result_contents_project_reports_path: Utils.route([["project_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"reports",false],[2,[7,"/",false],[2,[6,"new",false],[2,[7,"/",false],[2,[6,"result_contents",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// result_result_comment => /results/:result_id/comments/:id(.:format)
  // function(result_id, id, options)
  result_result_comment_path: Utils.route([["result_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"results",false],[2,[7,"/",false],[2,[3,"result_id",false],[2,[7,"/",false],[2,[6,"comments",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// result_result_comments => /results/:result_id/comments(.:format)
  // function(result_id, options)
  result_result_comments_path: Utils.route([["result_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"results",false],[2,[7,"/",false],[2,[3,"result_id",false],[2,[7,"/",false],[2,[6,"comments",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// result_table => /result_tables/:id(.:format)
  // function(id, options)
  result_table_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"result_tables",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// result_table_download => /result_tables/:id/download(.:format)
  // function(id, options)
  result_table_download_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"result_tables",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"download",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// result_text => /result_texts/:id(.:format)
  // function(id, options)
  result_text_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"result_texts",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// result_text_download => /result_texts/:id/download(.:format)
  // function(id, options)
  result_text_download_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"result_texts",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"download",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// results_my_module => /modules/:id/results(.:format)
  // function(id, options)
  results_my_module_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"modules",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"results",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// revert_modal_protocol => /protocols/:id/revert_modal(.:format)
  // function(id, options)
  revert_modal_protocol_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"revert_modal",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// revert_protocol => /protocols/:id/revert(.:format)
  // function(id, options)
  revert_protocol_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"revert",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// root => /
  // function(options)
  root_path: Utils.route([], {}, [7,"/",false]),
// save_modal_project_reports => /projects/:project_id/reports/_save(.:format)
  // function(project_id, options)
  save_modal_project_reports_path: Utils.route([["project_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"reports",false],[2,[7,"/",false],[2,[6,"_save",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// search => /search(.:format)
  // function(options)
  search_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"search",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// search_tags_my_module_my_module_tags => /modules/:my_module_id/tags/search_tags(.:format)
  // function(my_module_id, options)
  search_tags_my_module_my_module_tags_path: Utils.route([["my_module_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"modules",false],[2,[7,"/",false],[2,[3,"my_module_id",false],[2,[7,"/",false],[2,[6,"tags",false],[2,[7,"/",false],[2,[6,"search_tags",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// sidebar_repositories => /repositories/sidebar(.:format)
  // function(options)
  sidebar_repositories_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[6,"sidebar",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// sidebar_team => /teams/:id/sidebar(.:format)
  // function(id, options)
  sidebar_team_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"sidebar",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// start_edit_image => /files/:id/start_edit_image(.:format)
  // function(id, options)
  start_edit_image_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"files",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"start_edit_image",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// start_editing_marvin_js_asset => /marvin_js_assets/:id/start_editing(.:format)
  // function(id, options)
  start_editing_marvin_js_asset_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"marvin_js_assets",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"start_editing",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// status_my_module_repository_snapshot => /modules/:my_module_id/repository_snapshots/:id/status(.:format)
  // function(my_module_id, id, options)
  status_my_module_repository_snapshot_path: Utils.route([["my_module_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"modules",false],[2,[7,"/",false],[2,[3,"my_module_id",false],[2,[7,"/",false],[2,[6,"repository_snapshots",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"status",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// status_state_my_module => /modules/:id/status_state(.:format)
  // function(id, options)
  status_state_my_module_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"modules",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"status_state",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// step => /steps/:id(.:format)
  // function(id, options)
  step_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"steps",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// step_contents_modal_project_reports => /projects/:project_id/reports/new/step_contents_modal(.:format)
  // function(project_id, options)
  step_contents_modal_project_reports_path: Utils.route([["project_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"reports",false],[2,[7,"/",false],[2,[6,"new",false],[2,[7,"/",false],[2,[6,"step_contents_modal",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// step_contents_project_reports => /projects/:project_id/reports/new/step_contents(.:format)
  // function(project_id, options)
  step_contents_project_reports_path: Utils.route([["project_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[3,"project_id",false],[2,[7,"/",false],[2,[6,"reports",false],[2,[7,"/",false],[2,[6,"new",false],[2,[7,"/",false],[2,[6,"step_contents",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// step_step_comment => /steps/:step_id/comments/:id(.:format)
  // function(step_id, id, options)
  step_step_comment_path: Utils.route([["step_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"steps",false],[2,[7,"/",false],[2,[3,"step_id",false],[2,[7,"/",false],[2,[6,"comments",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// step_step_comments => /steps/:step_id/comments(.:format)
  // function(step_id, options)
  step_step_comments_path: Utils.route([["step_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"steps",false],[2,[7,"/",false],[2,[3,"step_id",false],[2,[7,"/",false],[2,[6,"comments",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// steps_list_protocol => /protocols/:id/steps_list(.:format)
  // function(id, options)
  steps_list_protocol_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"steps_list",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// system_notification => /system_notifications/:id(.:format)
  // function(id, options)
  system_notification_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"system_notifications",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// system_notifications => /system_notifications(.:format)
  // function(options)
  system_notifications_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"system_notifications",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// team => /users/settings/teams/:id(.:format)
  // function(id, options)
  team_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"settings",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// team_build_external_protocol => /teams/:team_id/build_external_protocol(.:format)
  // function(team_id, options)
  team_build_external_protocol_path: Utils.route([["team_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"build_external_protocol",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// team_description => /users/settings/teams/:id/description_html(.:format)
  // function(id, options)
  team_description_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"settings",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"description_html",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// team_filter_global_activities => /global_activities/team_filter(.:format)
  // function(options)
  team_filter_global_activities_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"global_activities",false],[2,[7,"/",false],[2,[6,"team_filter",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// team_import_external_protocol => /teams/:team_id/import_external_protocol(.:format)
  // function(team_id, options)
  team_import_external_protocol_path: Utils.route([["team_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"import_external_protocol",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// team_list_external_protocol => /teams/:team_id/list_external_protocol(.:format)
  // function(team_id, options)
  team_list_external_protocol_path: Utils.route([["team_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"list_external_protocol",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// team_name => /users/settings/teams/:id/name_html(.:format)
  // function(id, options)
  team_name_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"settings",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"name_html",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// team_repositories => /teams/:team_id/repositories(.:format)
  // function(team_id, options)
  team_repositories_path: Utils.route([["team_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"repositories",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// team_repository => /teams/:team_id/repositories/:id(.:format)
  // function(team_id, id, options)
  team_repository_path: Utils.route([["team_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// team_repository_copy => /teams/:team_id/repositories/:repository_id/copy(.:format)
  // function(team_id, repository_id, options)
  team_repository_copy_path: Utils.route([["team_id",true],["repository_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"repository_id",false],[2,[7,"/",false],[2,[6,"copy",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// team_repository_copy_modal => /teams/:team_id/repositories/:repository_id/copy_modal(.:format)
  // function(team_id, repository_id, options)
  team_repository_copy_modal_path: Utils.route([["team_id",true],["repository_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"repository_id",false],[2,[7,"/",false],[2,[6,"copy_modal",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// team_repository_destroy_modal => /teams/:team_id/repositories/:repository_id/destroy_modal(.:format)
  // function(team_id, repository_id, options)
  team_repository_destroy_modal_path: Utils.route([["team_id",true],["repository_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"repository_id",false],[2,[7,"/",false],[2,[6,"destroy_modal",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// team_repository_rename_modal => /teams/:team_id/repositories/:repository_id/rename_modal(.:format)
  // function(team_id, repository_id, options)
  team_repository_rename_modal_path: Utils.route([["team_id",true],["repository_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"repository_id",false],[2,[7,"/",false],[2,[6,"rename_modal",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// team_repository_share_modal => /teams/:team_id/repositories/:repository_id/share_modal(.:format)
  // function(team_id, repository_id, options)
  team_repository_share_modal_path: Utils.route([["team_id",true],["repository_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"repository_id",false],[2,[7,"/",false],[2,[6,"share_modal",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// team_repository_team_repositories => /teams/:team_id/repositories/:repository_id/team_repositories/update(.:format)
  // function(team_id, repository_id, options)
  team_repository_team_repositories_path: Utils.route([["team_id",true],["repository_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"repository_id",false],[2,[7,"/",false],[2,[6,"team_repositories",false],[2,[7,"/",false],[2,[6,"update",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]),
// team_repository_team_repository => /teams/:team_id/repositories/:repository_id/team_repositories/:id(.:format)
  // function(team_id, repository_id, id, options)
  team_repository_team_repository_path: Utils.route([["team_id",true],["repository_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"repository_id",false],[2,[7,"/",false],[2,[6,"team_repositories",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]]]),
// team_show_external_protocol => /teams/:team_id/show_external_protocol(.:format)
  // function(team_id, options)
  team_show_external_protocol_path: Utils.route([["team_id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"team_id",false],[2,[7,"/",false],[2,[6,"show_external_protocol",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// team_sketches_marvin_js_assets => /marvin_js_assets/team_sketches(.:format)
  // function(options)
  team_sketches_marvin_js_assets_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"marvin_js_assets",false],[2,[7,"/",false],[2,[6,"team_sketches",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// team_users_datatable => /users/settings/teams/:id/users_datatable(.:format)
  // function(id, options)
  team_users_datatable_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"settings",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"users_datatable",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// teams => /users/settings/teams(.:format)
  // function(options)
  teams_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"settings",false],[2,[7,"/",false],[2,[6,"teams",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// teams_datatable => /users/settings/teams/datatable(.:format)
  // function(options)
  teams_datatable_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"settings",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[6,"datatable",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// tiny_mce_assets => /tiny_mce_assets(.:format)
  // function(options)
  tiny_mce_assets_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"tiny_mce_assets",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// to_user_date_format => /helpers/to_user_date_format(.:format)
  // function(options)
  to_user_date_format_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"helpers",false],[2,[7,"/",false],[2,[6,"to_user_date_format",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// toggle_step_state_step => /steps/:id/toggle_step_state(.:format)
  // function(id, options)
  toggle_step_state_step_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"steps",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"toggle_step_state",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// toggle_view_mode => /files/:id/toggle_view_mode(.:format)
  // function(id, options)
  toggle_view_mode_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"files",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"toggle_view_mode",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// unlink_connected_account => /users/settings/account/connected_accounts(.:format)
  // function(options)
  unlink_connected_account_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"settings",false],[2,[7,"/",false],[2,[6,"account",false],[2,[7,"/",false],[2,[6,"connected_accounts",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// unlink_modal_protocol => /protocols/:id/unlink_modal(.:format)
  // function(id, options)
  unlink_modal_protocol_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"unlink_modal",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// unlink_protocol => /protocols/:id/unlink(.:format)
  // function(id, options)
  unlink_protocol_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"unlink",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// unseen_counter_system_notifications => /system_notifications/unseen_counter(.:format)
  // function(options)
  unseen_counter_system_notifications_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"system_notifications",false],[2,[7,"/",false],[2,[6,"unseen_counter",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// unseen_notification => /users/:id/unseen_notification(.:format)
  // function(id, options)
  unseen_notification_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"unseen_notification",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// update_asset_image => /files/:id/update_image(.:format)
  // function(id, options)
  update_asset_image_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"files",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"update_image",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// update_asset_view_mode_step => /steps/:id/update_asset_view_mode(.:format)
  // function(id, options)
  update_asset_view_mode_step_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"steps",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"update_asset_view_mode",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// update_description_my_module => /modules/:id/description(.:format)
  // function(id, options)
  update_description_my_module_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"modules",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"description",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// update_from_parent_modal_protocol => /protocols/:id/update_from_parent_modal(.:format)
  // function(id, options)
  update_from_parent_modal_protocol_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"update_from_parent_modal",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// update_from_parent_protocol => /protocols/:id/update_from_parent(.:format)
  // function(id, options)
  update_from_parent_protocol_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"update_from_parent",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// update_modal_my_module_repository => /modules/:my_module_id/repositories/:id/update_repository_records_modal(.:format)
  // function(my_module_id, id, options)
  update_modal_my_module_repository_path: Utils.route([["my_module_id",true],["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"modules",false],[2,[7,"/",false],[2,[3,"my_module_id",false],[2,[7,"/",false],[2,[6,"repositories",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"update_repository_records_modal",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// update_parent_modal_protocol => /protocols/:id/update_parent_modal(.:format)
  // function(id, options)
  update_parent_modal_protocol_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"update_parent_modal",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// update_parent_protocol => /protocols/:id/update_parent(.:format)
  // function(id, options)
  update_parent_protocol_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"update_parent",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// update_preferences => /users/settings/account/preferences(.:format)
  // function(options)
  update_preferences_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"settings",false],[2,[7,"/",false],[2,[6,"account",false],[2,[7,"/",false],[2,[6,"preferences",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// update_protocol_description_my_module => /modules/:id/protocol_description(.:format)
  // function(id, options)
  update_protocol_description_my_module_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"modules",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"protocol_description",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// update_rails_disk_service => /rails/active_storage/disk/:encoded_token(.:format)
  // function(encoded_token, options)
  update_rails_disk_service_path: Utils.route([["encoded_token",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"rails",false],[2,[7,"/",false],[2,[6,"active_storage",false],[2,[7,"/",false],[2,[6,"disk",false],[2,[7,"/",false],[2,[3,"encoded_token",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// update_state_my_module => /modules/:id/state(.:format)
  // function(id, options)
  update_state_my_module_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"modules",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"state",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// update_team => /users/settings/teams/:id(.:format)
  // function(id, options)
  update_team_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"settings",false],[2,[7,"/",false],[2,[6,"teams",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// update_togglable_settings => /users/settings/account/preferences/togglable_settings(.:format)
  // function(options)
  update_togglable_settings_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"settings",false],[2,[7,"/",false],[2,[6,"account",false],[2,[7,"/",false],[2,[6,"preferences",false],[2,[7,"/",false],[2,[6,"togglable_settings",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]]]),
// update_user_team => /users/settings/user_teams/:id(.:format)
  // function(id, options)
  update_user_team_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"settings",false],[2,[7,"/",false],[2,[6,"user_teams",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// update_view_state_step => /steps/:id/update_view_state(.:format)
  // function(id, options)
  update_view_state_step_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"steps",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"update_view_state",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// updated_at_label_protocol => /protocols/:id/updated_at_label(.:format)
  // function(id, options)
  updated_at_label_protocol_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"protocols",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"updated_at_label",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// user_confirmation => /users/confirmation(.:format)
  // function(options)
  user_confirmation_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"confirmation",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// user_current_team => /users/settings/user_current_team(.:format)
  // function(options)
  user_current_team_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"settings",false],[2,[7,"/",false],[2,[6,"user_current_team",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// user_customazureactivedirectory_omniauth_authorize => /users/auth/customazureactivedirectory(.:format)
  // function(options)
  user_customazureactivedirectory_omniauth_authorize_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"auth",false],[2,[7,"/",false],[2,[6,"customazureactivedirectory",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// user_customazureactivedirectory_omniauth_callback => /users/auth/customazureactivedirectory/callback(.:format)
  // function(options)
  user_customazureactivedirectory_omniauth_callback_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"auth",false],[2,[7,"/",false],[2,[6,"customazureactivedirectory",false],[2,[7,"/",false],[2,[6,"callback",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// user_filter_global_activities => /global_activities/user_filter(.:format)
  // function(options)
  user_filter_global_activities_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"global_activities",false],[2,[7,"/",false],[2,[6,"user_filter",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// user_invitation => /users/invitation(.:format)
  // function(options)
  user_invitation_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"invitation",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// user_linkedin_omniauth_authorize => /users/auth/linkedin(.:format)
  // function(options)
  user_linkedin_omniauth_authorize_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"auth",false],[2,[7,"/",false],[2,[6,"linkedin",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// user_linkedin_omniauth_callback => /users/auth/linkedin/callback(.:format)
  // function(options)
  user_linkedin_omniauth_callback_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"auth",false],[2,[7,"/",false],[2,[6,"linkedin",false],[2,[7,"/",false],[2,[6,"callback",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]]]),
// user_password => /users/password(.:format)
  // function(options)
  user_password_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"password",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// user_registration => /users(.:format)
  // function(options)
  user_registration_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// user_session => /users/sign_in(.:format)
  // function(options)
  user_session_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"sign_in",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// user_unlock => /users/unlock(.:format)
  // function(options)
  user_unlock_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"unlock",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// users => /users(.:format)
  // function(options)
  users_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[1,[2,[8,".",false],[3,"format",false]],false]]]),
// users_2fa_disable => /users/2fa_disable(.:format)
  // function(options)
  users_2fa_disable_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"2fa_disable",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// users_2fa_enable => /users/2fa_enable(.:format)
  // function(options)
  users_2fa_enable_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"2fa_enable",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// users_2fa_qr_code => /users/2fa_qr_code(.:format)
  // function(options)
  users_2fa_qr_code_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"2fa_qr_code",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// users_auth_token_sign_in => /users/auth_token_sign_in(.:format)
  // function(options)
  users_auth_token_sign_in_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"auth_token_sign_in",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// users_authenticate_with_recovery_code => /users/authenticate_with_recovery_code(.:format)
  // function(options)
  users_authenticate_with_recovery_code_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"authenticate_with_recovery_code",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// users_authenticate_with_two_factor => /users/authenticate_with_two_factor(.:format)
  // function(options)
  users_authenticate_with_two_factor_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"authenticate_with_two_factor",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// users_complete_sign_up_provider => /users/complete_sign_up_provider(.:format)
  // function(options)
  users_complete_sign_up_provider_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"complete_sign_up_provider",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// users_filter_projects => /projects/users_filter(.:format)
  // function(options)
  users_filter_projects_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"projects",false],[2,[7,"/",false],[2,[6,"users_filter",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// users_password => /users/password(.:format)
  // function(options)
  users_password_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"password",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// users_sign_up_provider => /users/sign_up_provider(.:format)
  // function(options)
  users_sign_up_provider_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"sign_up_provider",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// users_two_factor_recovery => /users/two_factor_recovery(.:format)
  // function(options)
  users_two_factor_recovery_path: Utils.route([["format",false]], {}, [2,[7,"/",false],[2,[6,"users",false],[2,[7,"/",false],[2,[6,"two_factor_recovery",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]),
// view_asset => /files/:id/view(.:format)
  // function(id, options)
  view_asset_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"files",false],[2,[7,"/",false],[2,[3,"id",false],[2,[7,"/",false],[2,[6,"view",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// wopi_rest_endpoint => /wopi/files/:id(.:format)
  // function(id, options)
  wopi_rest_endpoint_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"wopi",false],[2,[7,"/",false],[2,[6,"files",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// zip_exports_download => /zip_exports/download/:id(.:format)
  // function(id, options)
  zip_exports_download_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"zip_exports",false],[2,[7,"/",false],[2,[6,"download",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]]),
// zip_exports_download_export_all => /zip_exports/download_export_all_zip/:id(.:format)
  // function(id, options)
  zip_exports_download_export_all_path: Utils.route([["id",true],["format",false]], {}, [2,[7,"/",false],[2,[6,"zip_exports",false],[2,[7,"/",false],[2,[6,"download_export_all_zip",false],[2,[7,"/",false],[2,[3,"id",false],[1,[2,[8,".",false],[3,"format",false]],false]]]]]]])}
;
      routes.configure = function(config) {
        return Utils.configure(config);
      };
      routes.config = function() {
        return Utils.config();
      };
      routes.default_serializer = function(object, prefix) {
        return Utils.default_serializer(object, prefix);
      };
      return Object.assign({
        "default": routes
      }, routes);
    }
  };

  result = Utils.make();

  if (typeof define === "function" && define.amd) {
    define([], function() {
      return result;
    });
  } else if (typeof module !== "undefined" && module !== null) {
    try {
      module.exports = result;
    } catch (error1) {
      error = error1;
      if (error.name !== 'TypeError') {
        throw error;
      }
    }
  } else {
    Utils.namespace(this, null, result);
  }

  return result;

}).call(this);
